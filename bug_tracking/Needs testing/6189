From myers@eng.utah.edu  Sat Oct 25 14:28:27 2014
Return-Path: <myers@eng.utah.edu>
Received: from bowie.eng.utah.edu (bowie.eng.utah.edu [155.98.110.113])
	by chou.ece.utah.edu (8.14.7/8.14.4) with ESMTP id s9PKSRuD008747
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Sat, 25 Oct 2014 14:28:27 -0600
Received: from c-67-177-39-60.hsd1.ut.comcast.net ([67.177.39.60] helo=[10.0.0.3])
	by bowie.eng.utah.edu with esmtpsa (TLSv1:AES128-SHA:128)
	(Exim 4.72 (FreeBSD))
	(envelope-from <myers@eng.utah.edu>)
	id 1Xi8Uc-000M7r-Ot; Sat, 25 Oct 2014 15:03:22 -0600
From: "Chris J. Myers" <myers@ece.utah.edu>
Content-Type: text/plain; charset=us-ascii
Subject: BUG: array validation errors
Date: Sat, 25 Oct 2014 14:28:19 -0600
Message-Id: <E1C2FF18-3307-4CC2-BDBB-003DFD3AB4C5@ece.utah.edu>
Cc: Leandro Watanabe <leandrohw@gmail.com>
To: Leandro Hikiji Watanabe <atacs-bugs@vlsigroup.ece.utah.edu>
Mime-Version: 1.0 (Mac OS X Mail 7.3 \(1878.6\))
X-Mailer: Apple Mail (2.1878.6)
Sender: myers@eng.utah.edu
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by chou.ece.utah.edu id s9PKSRuD008747

For the SubModel.xml example, I'm getting the validation errors below.  I think most if not all are spurious:

0:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
1:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
2:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
3:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
4:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
5:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
6:Index math should be statically computable, meaning that it should only contain dimension ids or constant values but C2 is not statically computable.
7:Index math should not go out-of-bounds but index for C2 does.
8:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
9:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
10:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
11:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
12:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
13:Index objects should reference a valid SIdRef Index [referencedAttribute=comp:portRef, arrayDimension=0] references an unknown SBase.
14:Index math should be statically computable, meaning that it should only contain dimension ids or constant values but C4 is not statically computable.
15:Index math should not go out-of-bounds but index for C4 does.
16:Index math should be statically computable, meaning that it should only contain dimension ids or constant values but C4 is not statically computable.
17:Index math should not go out-of-bounds but index for C4 does.


