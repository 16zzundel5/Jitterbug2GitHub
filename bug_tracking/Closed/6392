From myers@eng.utah.edu  Tue Sep 15 08:59:54 2015
Return-Path: <myers@eng.utah.edu>
Received: from mailhub.eng.utah.edu (mailhub.eng.utah.edu [155.98.110.27])
	by chou.ece.utah.edu (8.14.9/8.14.4) with ESMTP id t8FExsdh012734
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Tue, 15 Sep 2015 08:59:54 -0600
Received: from panic.eng.utah.edu ([155.98.110.176])
	by mailhub.eng.utah.edu with esmtps TLSv1.2:DHE-RSA-AES256-GCM-SHA384:256
	(Exim 4.84 id 1Zbri5-000M9j-JB); Tue, 15 Sep 2015 08:59:54 -0600
Received: from ching.ece.utah.edu ([155.98.27.211])
	by panic.eng.utah.edu with esmtpsa (TLSv1:DHE-RSA-AES256-SHA:256)
	(Exim 4.84 (FreeBSD))
	(envelope-from <myers@eng.utah.edu>)
	id 1Zbri6-0001ia-Il; Tue, 15 Sep 2015 08:59:54 -0600
Content-Type: text/plain; charset=us-ascii
Mime-Version: 1.0 (Mac OS X Mail 8.2 \(2104\))
Subject: Re: BUG: VHDL compiler does not handle random assignments
From: "Chris J. Myers" <myers@ece.utah.edu>
In-Reply-To: <CA+LVOvnXJMdgsSATsP_3UmHhqKjGdZU7bj_cg4pxW2kdtt4-vw@mail.gmail.com>
Date: Tue, 15 Sep 2015 08:59:53 -0600
Cc: atacs-bugs <atacs-bugs@vlsigroup.ece.utah.edu>
Content-Transfer-Encoding: 7bit
Message-Id: <71E263E8-16BC-4E30-B6FE-F8B8EE15C7CB@ece.utah.edu>
References: <CA+LVOvnXJMdgsSATsP_3UmHhqKjGdZU7bj_cg4pxW2kdtt4-vw@mail.gmail.com>
To: Zhen Zhang <zhen.zhang@utah.edu>
X-Mailer: Apple Mail (2.2104)
X-UCE-Score: -2.5 (--)
X-spam-level: --

I think I checked in a fix for this one.

Chris

> On Sep 14, 2015, at 11:51 PM, Zhen Zhang <zhen.zhang@utah.edu> wrote:
> 
> Currently, random selection in an assignment does not compile to a
> corresponding variable assignment in LPN. For example, the VHDL
> statement "data1 <= selection(4,2)" is not converted to a random
> assignment to variable "data1" in LPN.
> 
> Rewriting this statement to the statements below does not help either.
> Only the assignment appears under the first branch of the if
> statement, i.e., one_flit <= "11", gets compiled to an assignment in
> LPN. The other assignments are lost.
>    z := selection(4);
>    if (z = 1) then
>      data1 <= "11";
>      wait for delay(1, 1);
>    elsif (z = 2) then
>      data1 <= "01";
>      wait for delay(1, 1);
>    elsif (z = 3) then
>      data1 <= "10";
>      wait for delay(1, 1);
>    else
>      data1 <= "00";
>      wait for delay(1, 1);
>    end if;
> 
> The complete VHDL file is pasted below.
> library ieee;
> use ieee.std_logic_1164.all;
> use ieee.std_logic_arith.all;
> use ieee.std_logic_unsigned.all;
> use ieee.numeric_std.all;
> use work.channel.all;
> 
> entity producer_consumer is
> end producer_consumer;
> 
> architecture behavior of producer_consumer is
>  signal producer_to_buf1:channel:=init_channel;
> begin
>  producer:process
>    variable z : integer;
>  begin
>    --data1 <= selection(4,2);
>    --wait for delay(5,10);
>    z := selection(4);                  -- returns 1, 2, 3, or 4
>    if (z = 1) then
>      data1 <= "11";
>      wait for delay(1, 1);
>    elsif (z = 2) then
>      data1 <= "01";
>      wait for delay(1, 1);
>    elsif (z = 3) then
>      data1 <= "10";
>      wait for delay(1, 1);
>    else
>      data1 <= "00";
>      wait for delay(1, 1);
>    end if;
>    send(producer_to_buf1,data1);
>  end process producer;
>  buf1:process
>  begin
>    receive(producer_to_buf1,data2);
>  end process buf1
> end behavior;

