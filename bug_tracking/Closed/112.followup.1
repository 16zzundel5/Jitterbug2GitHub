From myers@jiaqi.elen.utah.edu  Sun May  2 16:28:40 1999
Received: from jiaqi.elen.utah.edu (han.elen.utah.edu [155.99.23.196]) by yuan.elen.utah.edu with ESMTP (8.7.1/8.7.1) id QAA28320 for <atacs-bugs@shang.elen.utah.edu>; Sun, 2 May 1999 16:28:30 -0600 (MDT)
Received: (from myers@localhost)
	by jiaqi.elen.utah.edu (8.8.7/8.8.7) id QAA00611
	for atacs-bugs@shang.elen.utah.edu; Sun, 2 May 1999 16:27:54 -0600
From: "Chris J. Myers" <myers@vlsigroup.elen.utah.edu>
Message-Id: <199905022227.QAA00611@jiaqi.elen.utah.edu>
Subject: Re: Verification Error (PR#112)
To: atacs-bugs@shang.elen.utah.edu (Eric Robert Peskin)
Date: Sun, 2 May 1999 16:27:52 -0600 (MDT)
In-Reply-To: <199905022044.OAA27974@yuan.elen.utah.edu> from "Eric Robert Peskin" at May 2, 99 02:44:15 pm
Content-Type: text

> 
> Sungtae, do you mean to type literally "*.g" at the ATACS prompt?
> I don't think atacs will expand wildcard characters like that.
> 
He means it figuratively.
>
> Chris, even if I rename the variable "ss", I still get the seg fault if I do
> what Sangtae seems to mean in [2] (See below.) 
> 
You need to have a copy of library.ver in your example directory.  The 
file is below:

Chris
--------------------- CUT HERE -----------
;
; Gate library: library.ver
;
(sm-ckt (fast-BUF (a) (z))
	a
)
(def (BUF-delay) :0,1:)
(def (BUF-one-delay (a) (b)) (delay-buffer a b BUF-delay))
(def (BUF-del ckt) (connect BUF-one-delay ckt #f #t))
(def /BUF/ (BUF-del fast-BUF))
;
(sm-ckt (fast-BUF-N-1 (a) (z))
	(not a)
)
(def (BUF-N-1-delay) :1,2:)
(def (BUF-N-1-one-delay (a) (b)) (delay-buffer a b BUF-N-1-delay))
(def (BUF-N-1-del ckt) (connect BUF-N-1-one-delay ckt #f #t))
(def /BUF-N-1/ (BUF-N-1-del fast-BUF-N-1))
;
(sm-ckt (fast-AND2 (a b) (z))
	(and a b)
)
(def (AND2-delay) :1,3:)
(def (AND2-one-delay (a) (b)) (delay-buffer a b AND2-delay))
(def (AND2-del ckt) (connect AND2-one-delay ckt #f #t))
(def /AND2/ (AND2-del fast-AND2))
;
(sm-ckt (fast-AND2-N-1 (a b) (z))
	(and (not a) b)
)
(def (AND2-N-1-delay) :1,3:)
(def (AND2-N-1-one-delay (a) (b)) (delay-buffer a b AND2-N-1-delay))
(def (AND2-N-1-del ckt) (connect AND2-N-1-one-delay ckt #f #t))
(def /AND2-N-1/ (AND2-N-1-del fast-AND2-N-1))
;
(sm-ckt (fast-AND2-N-2 (a b) (z))
	(and a (not b))
)
(def (AND2-N-2-delay) :1,3:)
(def (AND2-N-2-one-delay (a) (b)) (delay-buffer a b AND2-N-2-delay))
(def (AND2-N-2-del ckt) (connect AND2-N-2-one-delay ckt #f #t))
(def /AND2-N-2/ (AND2-N-2-del fast-AND2-N-2))
;
(sm-ckt (fast-AND2-N-1-2 (a b) (z))
	(and (not a) (not b))
)
(def (AND2-N-1-2-delay) :1,3:)
(def (AND2-N-1-2-one-delay (a) (b)) (delay-buffer a b AND2-N-1-2-delay))
(def (AND2-N-1-2-del ckt) (connect AND2-N-1-2-one-delay ckt #f #t))
(def /AND2-N-1-2/ (AND2-N-1-2-del fast-AND2-N-1-2))
;
(sm-ckt (fast-AND3 (a b c) (z))
	(and (and a b) c)
)
(def (AND3-delay) :1,4:)
(def (AND3-one-delay (a) (b)) (delay-buffer a b AND3-delay))
(def (AND3-del ckt) (connect AND3-one-delay ckt #f #t))
(def /AND3/ (AND3-del fast-AND3))
;
(sm-ckt (fast-AND3-N-1 (a b c) (z))
	(and (and (not a) b) c)
)
(def (AND3-N-1-delay) :1,4:)
(def (AND3-N-1-one-delay (a) (b)) (delay-buffer a b AND3-N-1-delay))
(def (AND3-N-1-del ckt) (connect AND3-N-1-one-delay ckt #f #t))
(def /AND3-N-1/ (AND3-N-1-del fast-AND3-N-1))
;
(sm-ckt (fast-AND3-N-2 (a b c) (z))
	(and (and a (not b)) c)
)
(def (AND3-N-2-delay) :1,4:)
(def (AND3-N-2-one-delay (a) (b)) (delay-buffer a b AND3-N-2-delay))
(def (AND3-N-2-del ckt) (connect AND3-N-2-one-delay ckt #f #t))
(def /AND3-N-2/ (AND3-N-2-del fast-AND3-N-2))
;
(sm-ckt (fast-AND3-N-3 (a b c) (z))
	(and (and a b) (not c))
)
(def (AND3-N-3-delay) :1,4:)
(def (AND3-N-3-one-delay (a) (b)) (delay-buffer a b AND3-N-3-delay))
(def (AND3-N-3-del ckt) (connect AND3-N-3-one-delay ckt #f #t))
(def /AND3-N-3/ (AND3-N-3-del fast-AND3-N-3))
;
(sm-ckt (fast-AND3-N-1-2 (a b c) (z))
	(and (and (not a) (not b)) c)
)
(def (AND3-N-1-2-delay) :1,4:)
(def (AND3-N-1-2-one-delay (a) (b)) (delay-buffer a b AND3-N-1-2-delay))
(def (AND3-N-1-2-del ckt) (connect AND3-N-1-2-one-delay ckt #f #t))
(def /AND3-N-1-2/ (AND3-N-1-2-del fast-AND3-N-1-2))
;
(sm-ckt (fast-AND3-N-1-3 (a b c) (z))
	(and (and (not a) b) (not c))
)
(def (AND3-N-1-3-delay) :1,4:)
(def (AND3-N-1-3-one-delay (a) (b)) (delay-buffer a b AND3-N-1-3-delay))
(def (AND3-N-1-3-del ckt) (connect AND3-N-1-3-one-delay ckt #f #t))
(def /AND3-N-1-3/ (AND3-N-1-3-del fast-AND3-N-1-3))
;
(sm-ckt (fast-AND3-N-2-3 (a b c) (z))
	(and (and a (not b)) (not c))
)
(def (AND3-N-2-3-delay) :1,4:)
(def (AND3-N-2-3-one-delay (a) (b)) (delay-buffer a b AND3-N-2-3-delay))
(def (AND3-N-2-3-del ckt) (connect AND3-N-2-3-one-delay ckt #f #t))
(def /AND3-N-2-3/ (AND3-N-2-3-del fast-AND3-N-2-3))
;
(sm-ckt (fast-AND3-N-1-2-3 (a b c) (z))
	(and (and (not a) (not b)) (not c))
)
(def (AND3-N-1-2-3-delay) :1,4:)
(def (AND3-N-1-2-3-one-delay (a) (b)) (delay-buffer a b AND3-N-1-2-3-delay))
(def (AND3-N-1-2-3-del ckt) (connect AND3-N-1-2-3-one-delay ckt #f #t))
(def /AND3-N-1-2-3/ (AND3-N-1-2-3-del fast-AND3-N-1-2-3))
;
(sm-ckt (fast-AND4 (a b c d) (z))
	(and (and (and a b) c) d)
)
(def (AND4-delay) :1,5:)
(def (AND4-one-delay (a) (b)) (delay-buffer a b AND4-delay))
(def (AND4-del ckt) (connect AND4-one-delay ckt #f #t))
(def /AND4/ (AND4-del fast-AND4))
;
(sm-ckt (fast-AND4-N-1 (a b c d) (z))
	(and (and (and (not a) b) c) d)
)
(def (AND4-N-1-delay) :1,5:)
(def (AND4-N-1-one-delay (a) (b)) (delay-buffer a b AND4-N-1-delay))
(def (AND4-N-1-del ckt) (connect AND4-N-1-one-delay ckt #f #t))
(def /AND4-N-1/ (AND4-N-1-del fast-AND4-N-1))
;
(sm-ckt (fast-AND4-N-2 (a b c d) (z))
	(and (and (and a (not b)) c) d)
)
(def (AND4-N-2-delay) :1,5:)
(def (AND4-N-2-one-delay (a) (b)) (delay-buffer a b AND4-N-2-delay))
(def (AND4-N-2-del ckt) (connect AND4-N-2-one-delay ckt #f #t))
(def /AND4-N-2/ (AND4-N-2-del fast-AND4-N-2))
;
(sm-ckt (fast-AND4-N-3 (a b c d) (z))
	(and (and (and a b) (not c)) d)
)
(def (AND4-N-3-delay) :1,5:)
(def (AND4-N-3-one-delay (a) (b)) (delay-buffer a b AND4-N-3-delay))
(def (AND4-N-3-del ckt) (connect AND4-N-3-one-delay ckt #f #t))
(def /AND4-N-3/ (AND4-N-3-del fast-AND4-N-3))
;
(sm-ckt (fast-AND4-N-4 (a b c d) (z))
	(and (and (and a b) c) (not d))
)
(def (AND4-N-4-delay) :1,5:)
(def (AND4-N-4-one-delay (a) (b)) (delay-buffer a b AND4-N-4-delay))
(def (AND4-N-4-del ckt) (connect AND4-N-4-one-delay ckt #f #t))
(def /AND4-N-4/ (AND4-N-4-del fast-AND4-N-4))
;
(sm-ckt (fast-AND4-N-1-2 (a b c d) (z))
	(and (and (and (not a) (not b)) c) d)
)
(def (AND4-N-1-2-delay) :1,5:)
(def (AND4-N-1-2-one-delay (a) (b)) (delay-buffer a b AND4-N-1-2-delay))
(def (AND4-N-1-2-del ckt) (connect AND4-N-1-2-one-delay ckt #f #t))
(def /AND4-N-1-2/ (AND4-N-1-2-del fast-AND4-N-1-2))
;
(sm-ckt (fast-AND4-N-1-3 (a b c d) (z))
	(and (and (and (not a) b) (not c)) d)
)
(def (AND4-N-1-3-delay) :1,5:)
(def (AND4-N-1-3-one-delay (a) (b)) (delay-buffer a b AND4-N-1-3-delay))
(def (AND4-N-1-3-del ckt) (connect AND4-N-1-3-one-delay ckt #f #t))
(def /AND4-N-1-3/ (AND4-N-1-3-del fast-AND4-N-1-3))
;
(sm-ckt (fast-AND4-N-1-4 (a b c d) (z))
	(and (and (and (not a) b) c) (not d))
)
(def (AND4-N-1-4-delay) :1,5:)
(def (AND4-N-1-4-one-delay (a) (b)) (delay-buffer a b AND4-N-1-4-delay))
(def (AND4-N-1-4-del ckt) (connect AND4-N-1-4-one-delay ckt #f #t))
(def /AND4-N-1-4/ (AND4-N-1-4-del fast-AND4-N-1-4))
;
(sm-ckt (fast-AND4-N-2-3 (a b c d) (z))
	(and (and (and a (not b)) (not c)) d)
)
(def (AND4-N-2-3-delay) :1,5:)
(def (AND4-N-2-3-one-delay (a) (b)) (delay-buffer a b AND4-N-2-3-delay))
(def (AND4-N-2-3-del ckt) (connect AND4-N-2-3-one-delay ckt #f #t))
(def /AND4-N-2-3/ (AND4-N-2-3-del fast-AND4-N-2-3))
;
(sm-ckt (fast-AND4-N-2-4 (a b c d) (z))
	(and (and (and a (not b)) c) (not d))
)
(def (AND4-N-2-4-delay) :1,5:)
(def (AND4-N-2-4-one-delay (a) (b)) (delay-buffer a b AND4-N-2-4-delay))
(def (AND4-N-2-4-del ckt) (connect AND4-N-2-4-one-delay ckt #f #t))
(def /AND4-N-2-4/ (AND4-N-2-4-del fast-AND4-N-2-4))
;
(sm-ckt (fast-AND4-N-3-4 (a b c d) (z))
	(and (and (and a b) (not c)) (not d))
)
(def (AND4-N-3-4-delay) :1,5:)
(def (AND4-N-3-4-one-delay (a) (b)) (delay-buffer a b AND4-N-3-4-delay))
(def (AND4-N-3-4-del ckt) (connect AND4-N-3-4-one-delay ckt #f #t))
(def /AND4-N-3-4/ (AND4-N-3-4-del fast-AND4-N-3-4))
;
(sm-ckt (fast-AND4-N-1-2-3 (a b c d) (z))
	(and (and (and (not a) (not b)) (not c)) d)
)
(def (AND4-N-1-2-3-delay) :1,5:)
(def (AND4-N-1-2-3-one-delay (a) (b)) (delay-buffer a b AND4-N-1-2-3-delay))
(def (AND4-N-1-2-3-del ckt) (connect AND4-N-1-2-3-one-delay ckt #f #t))
(def /AND4-N-1-2-3/ (AND4-N-1-2-3-del fast-AND4-N-1-2-3))
;
(sm-ckt (fast-AND4-N-1-2-4 (a b c d) (z))
	(and (and (and (not a) (not b)) c) (not d))
)
(def (AND4-N-1-2-4-delay) :1,5:)
(def (AND4-N-1-2-4-one-delay (a) (b)) (delay-buffer a b AND4-N-1-2-4-delay))
(def (AND4-N-1-2-4-del ckt) (connect AND4-N-1-2-4-one-delay ckt #f #t))
(def /AND4-N-1-2-4/ (AND4-N-1-2-4-del fast-AND4-N-1-2-4))
;
(sm-ckt (fast-AND4-N-1-3-4 (a b c d) (z))
	(and (and (and (not a) b) (not c)) (not d))
)
(def (AND4-N-1-3-4-delay) :1,5:)
(def (AND4-N-1-3-4-one-delay (a) (b)) (delay-buffer a b AND4-N-1-3-4-delay))
(def (AND4-N-1-3-4-del ckt) (connect AND4-N-1-3-4-one-delay ckt #f #t))
(def /AND4-N-1-3-4/ (AND4-N-1-3-4-del fast-AND4-N-1-3-4))
;
(sm-ckt (fast-AND4-N-2-3-4 (a b c d) (z))
	(and (and (and a (not b)) (not c)) (not d))
)
(def (AND4-N-2-3-4-delay) :1,5:)
(def (AND4-N-2-3-4-one-delay (a) (b)) (delay-buffer a b AND4-N-2-3-4-delay))
(def (AND4-N-2-3-4-del ckt) (connect AND4-N-2-3-4-one-delay ckt #f #t))
(def /AND4-N-2-3-4/ (AND4-N-2-3-4-del fast-AND4-N-2-3-4))
;
(sm-ckt (fast-AND4-N-1-2-3-4 (a b c d) (z))
	(and (and (and (not a) (not b)) (not c)) (not d))
)
(def (AND4-N-1-2-3-4-delay) :1,5:)
(def (AND4-N-1-2-3-4-one-delay (a) (b))(delay-buffer a b AND4-N-1-2-3-4-delay))
(def (AND4-N-1-2-3-4-del ckt) (connect AND4-N-1-2-3-4-one-delay ckt #f #t))
(def /AND4-N-1-2-3-4/ (AND4-N-1-2-3-4-del fast-AND4-N-1-2-3-4))
;
(sm-ckt (fast-AND5-N-5 (a b c d e) (z))
	(and (and (and (and a b) c) d) (not e))
)
(def (AND5-N-5-delay) :1,6:)
(def (AND5-N-5-one-delay (a) (b))(delay-buffer a b AND5-N-5-delay))
(def (AND5-N-5-del ckt) (connect AND5-N-5-one-delay ckt #f #t))
(def /AND5-N-5/ (AND5-N-5-del fast-AND5-N-5))
;
(sm-ckt (fast-OR2 (a b) (z))
	(or a b)
)
(def (OR2-delay) :1,3:)
(def (OR2-one-delay (a) (b)) (delay-buffer a b OR2-delay))
(def (OR2-del ckt) (connect OR2-one-delay ckt #f #t))
(def /OR2/ (OR2-del fast-OR2))
;
(sm-ckt (fast-OR2-N-1 (a b) (z))
	(or (not a) b)
)
(def (OR2-N-1-delay) :1,3:)
(def (OR2-N-1-one-delay (a) (b)) (delay-buffer a b OR2-N-1-delay))
(def (OR2-N-1-del ckt) (connect OR2-N-1-one-delay ckt #f #t))
(def /OR2-N-1/ (OR2-N-1-del fast-OR2-N-1))
;
(sm-ckt (fast-OR2-N-2 (a b) (z))
	(or a (not b))
)
(def (OR2-N-2-delay) :1,3:)
(def (OR2-N-2-one-delay (a) (b)) (delay-buffer a b OR2-N-2-delay))
(def (OR2-N-2-del ckt) (connect OR2-N-2-one-delay ckt #f #t))
(def /OR2-N-2/ (OR2-N-2-del fast-OR2-N-2))
;
(sm-ckt (fast-OR2-N-1-2 (a b) (z))
	(or (not a) (not b))
)
(def (OR2-N-1-2-delay) :1,3:)
(def (OR2-N-1-2-one-delay (a) (b)) (delay-buffer a b OR2-N-1-2-delay))
(def (OR2-N-1-2-del ckt) (connect OR2-N-1-2-one-delay ckt #f #t))
(def /OR2-N-1-2/ (OR2-N-1-2-del fast-OR2-N-1-2))
;
(sm-ckt (fast-OR3 (a b c) (z))
	(or (or a b) c)
)
(def (OR3-delay) :1,4:)
(def (OR3-one-delay (a) (b)) (delay-buffer a b OR3-delay))
(def (OR3-del ckt) (connect OR3-one-delay ckt #f #t))
(def /OR3/ (OR3-del fast-OR3))
;
(sm-ckt (fast-OR3-N-1 (a b c) (z))
	(or (or (not a) b) c)
)
(def (OR3-N-1-delay) :1,4:)
(def (OR3-N-1-one-delay (a) (b)) (delay-buffer a b OR3-N-1-delay))
(def (OR3-N-1-del ckt) (connect OR3-N-1-one-delay ckt #f #t))
(def /OR3-N-1/ (OR3-N-1-del fast-OR3-N-1))
;
(sm-ckt (fast-OR3-N-2 (a b c) (z))
	(or (or a (not b)) c)
)
(def (OR3-N-2-delay) :1,4:)
(def (OR3-N-2-one-delay (a) (b)) (delay-buffer a b OR3-N-2-delay))
(def (OR3-N-2-del ckt) (connect OR3-N-2-one-delay ckt #f #t))
(def /OR3-N-2/ (OR3-N-2-del fast-OR3-N-2))
;
(sm-ckt (fast-OR3-N-3 (a b c) (z))
	(or (or a b) (not c))
)
(def (OR3-N-3-delay) :1,4:)
(def (OR3-N-3-one-delay (a) (b)) (delay-buffer a b OR3-N-3-delay))
(def (OR3-N-3-del ckt) (connect OR3-N-3-one-delay ckt #f #t))
(def /OR3-N-3/ (OR3-N-3-del fast-OR3-N-3))
;
(sm-ckt (fast-OR3-N-1-2 (a b c) (z))
	(or (or (not a) (not b)) c)
)
(def (OR3-N-1-2-delay) :1,4:)
(def (OR3-N-1-2-one-delay (a) (b)) (delay-buffer a b OR3-N-1-2-delay))
(def (OR3-N-1-2-del ckt) (connect OR3-N-1-2-one-delay ckt #f #t))
(def /OR3-N-1-2/ (OR3-N-1-2-del fast-OR3-N-1-2))
;
(sm-ckt (fast-OR3-N-1-3 (a b c) (z))
	(or (or (not a) b) (not c))
)
(def (OR3-N-1-3-delay) :1,4:)
(def (OR3-N-1-3-one-delay (a) (b)) (delay-buffer a b OR3-N-1-3-delay))
(def (OR3-N-1-3-del ckt) (connect OR3-N-1-3-one-delay ckt #f #t))
(def /OR3-N-1-3/ (OR3-N-1-3-del fast-OR3-N-1-3))
;
(sm-ckt (fast-OR3-N-2-3 (a b c) (z))
	(or (or a (not b)) (not c))
)
(def (OR3-N-2-3-delay) :1,4:)
(def (OR3-N-2-3-one-delay (a) (b)) (delay-buffer a b OR3-N-2-3-delay))
(def (OR3-N-2-3-del ckt) (connect OR3-N-2-3-one-delay ckt #f #t))
(def /OR3-N-2-3/ (OR3-N-2-3-del fast-OR3-N-2-3))
;
(sm-ckt (fast-OR3-N-1-2-3 (a b c) (z))
	(or (or (not a) (not b)) (not c))
)
(def (OR3-N-1-2-3-delay) :1,4:)
(def (OR3-N-1-2-3-one-delay (a) (b)) (delay-buffer a b OR3-N-1-2-3-delay))
(def (OR3-N-1-2-3-del ckt) (connect OR3-N-1-2-3-one-delay ckt #f #t))
(def /OR3-N-1-2-3/ (OR3-N-1-2-3-del fast-OR3-N-1-2-3))
;
(sm-ckt (fast-OR4 (a b c d) (z))
	(or (or (or a b) c) d)
)
(def (OR4-delay) :1,5:)
(def (OR4-one-delay (a) (b)) (delay-buffer a b OR4-delay))
(def (OR4-del ckt) (connect OR4-one-delay ckt #f #t))
(def /OR4/ (OR4-del fast-OR4))
;
(sm-ckt (fast-OR4-N-1 (a b c d) (z))
	(or (or (or (not a) b) c) d)
)
(def (OR4-N-1-delay) :1,5:)
(def (OR4-N-1-one-delay (a) (b)) (delay-buffer a b OR4-N-1-delay))
(def (OR4-N-1-del ckt) (connect OR4-N-1-one-delay ckt #f #t))
(def /OR4-N-1/ (OR4-N-1-del fast-OR4-N-1))
;
(sm-ckt (fast-OR4-N-2 (a b c d) (z))
	(or (or (or a (not b)) c) d)
)
(def (OR4-N-2-delay) :1,5:)
(def (OR4-N-2-one-delay (a) (b)) (delay-buffer a b OR4-N-2-delay))
(def (OR4-N-2-del ckt) (connect OR4-N-2-one-delay ckt #f #t))
(def /OR4-N-2/ (OR4-N-2-del fast-OR4-N-2))
;
(sm-ckt (fast-OR4-N-3 (a b c d) (z))
	(or (or (or a b) (not c)) d)
)
(def (OR4-N-3-delay) :1,5:)
(def (OR4-N-3-one-delay (a) (b)) (delay-buffer a b OR4-N-3-delay))
(def (OR4-N-3-del ckt) (connect OR4-N-3-one-delay ckt #f #t))
(def /OR4-N-3/ (OR4-N-3-del fast-OR4-N-3))
;
(sm-ckt (fast-OR4-N-4 (a b c d) (z))
	(or (or (or a b) c) (not d))
)
(def (OR4-N-4-delay) :1,5:)
(def (OR4-N-4-one-delay (a) (b)) (delay-buffer a b OR4-N-4-delay))
(def (OR4-N-4-del ckt) (connect OR4-N-4-one-delay ckt #f #t))
(def /OR4-N-4/ (OR4-N-4-del fast-OR4-N-4))
;
(sm-ckt (fast-OR4-N-1-2 (a b c d) (z))
	(or (or (or (not a) (not b)) c) d)
)
(def (OR4-N-1-2-delay) :1,5:)
(def (OR4-N-1-2-one-delay (a) (b)) (delay-buffer a b OR4-N-1-2-delay))
(def (OR4-N-1-2-del ckt) (connect OR4-N-1-2-one-delay ckt #f #t))
(def /OR4-N-1-2/ (OR4-N-1-2-del fast-OR4-N-1-2))
;
(sm-ckt (fast-OR4-N-1-3 (a b c d) (z))
	(or (or (or (not a) b) (not c)) d)
)
(def (OR4-N-1-3-delay) :1,5:)
(def (OR4-N-1-3-one-delay (a) (b)) (delay-buffer a b OR4-N-1-3-delay))
(def (OR4-N-1-3-del ckt) (connect OR4-N-1-3-one-delay ckt #f #t))
(def /OR4-N-1-3/ (OR4-N-1-3-del fast-OR4-N-1-3))
;
(sm-ckt (fast-OR4-N-1-4 (a b c d) (z))
	(or (or (or (not a) b) c) (not d))
)
(def (OR4-N-1-4-delay) :1,5:)
(def (OR4-N-1-4-one-delay (a) (b)) (delay-buffer a b OR4-N-1-4-delay))
(def (OR4-N-1-4-del ckt) (connect OR4-N-1-4-one-delay ckt #f #t))
(def /OR4-N-1-4/ (OR4-N-1-4-del fast-OR4-N-1-4))
;
(sm-ckt (fast-OR4-N-2-3 (a b c d) (z))
	(or (or (or a (not b)) (not c)) d)
)
(def (OR4-N-2-3-delay) :1,5:)
(def (OR4-N-2-3-one-delay (a) (b)) (delay-buffer a b OR4-N-2-3-delay))
(def (OR4-N-2-3-del ckt) (connect OR4-N-2-3-one-delay ckt #f #t))
(def /OR4-N-2-3/ (OR4-N-2-3-del fast-OR4-N-2-3))
;
(sm-ckt (fast-OR4-N-2-4 (a b c d) (z))
	(or (or (or a (not b)) c) (not d))
)
(def (OR4-N-2-4-delay) :1,5:)
(def (OR4-N-2-4-one-delay (a) (b)) (delay-buffer a b OR4-N-2-4-delay))
(def (OR4-N-2-4-del ckt) (connect OR4-N-2-4-one-delay ckt #f #t))
(def /OR4-N-2-4/ (OR4-N-2-4-del fast-OR4-N-2-4))
;
(sm-ckt (fast-OR4-N-3-4 (a b c d) (z))
	(or (or (or a b) (not c)) (not d))
)
(def (OR4-N-3-4-delay) :1,5:)
(def (OR4-N-3-4-one-delay (a) (b)) (delay-buffer a b OR4-N-3-4-delay))
(def (OR4-N-3-4-del ckt) (connect OR4-N-3-4-one-delay ckt #f #t))
(def /OR4-N-3-4/ (OR4-N-3-4-del fast-OR4-N-3-4))
;
(sm-ckt (fast-OR4-N-1-2-3 (a b c d) (z))
	(or (or (or (not a) (not b)) (not c)) d)
)
(def (OR4-N-1-2-3-delay) :1,5:)
(def (OR4-N-1-2-3-one-delay (a) (b)) (delay-buffer a b OR4-N-1-2-3-delay))
(def (OR4-N-1-2-3-del ckt) (connect OR4-N-1-2-3-one-delay ckt #f #t))
(def /OR4-N-1-2-3/ (OR4-N-1-2-3-del fast-OR4-N-1-2-3))
;
(sm-ckt (fast-OR4-N-1-2-4 (a b c d) (z))
	(or (or (or (not a) (not b)) c) (not d))
)
(def (OR4-N-1-2-4-delay) :1,5:)
(def (OR4-N-1-2-4-one-delay (a) (b)) (delay-buffer a b OR4-N-1-2-4-delay))
(def (OR4-N-1-2-4-del ckt) (connect OR4-N-1-2-4-one-delay ckt #f #t))
(def /OR4-N-1-2-4/ (OR4-N-1-2-4-del fast-OR4-N-1-2-4))
;
(sm-ckt (fast-OR4-N-1-3-4 (a b c d) (z))
	(or (or (or (not a) b) (not c)) (not d))
)
(def (OR4-N-1-3-4-delay) :1,5:)
(def (OR4-N-1-3-4-one-delay (a) (b)) (delay-buffer a b OR4-N-1-3-4-delay))
(def (OR4-N-1-3-4-del ckt) (connect OR4-N-1-3-4-one-delay ckt #f #t))
(def /OR4-N-1-3-4/ (OR4-N-1-3-4-del fast-OR4-N-1-3-4))
;
(sm-ckt (fast-OR4-N-2-3-4 (a b c d) (z))
	(or (or (or a (not b)) (not c)) (not d))
)
(def (OR4-N-2-3-4-delay) :1,5:)
(def (OR4-N-2-3-4-one-delay (a) (b)) (delay-buffer a b OR4-N-2-3-4-delay))
(def (OR4-N-2-3-4-del ckt) (connect OR4-N-2-3-4-one-delay ckt #f #t))
(def /OR4-N-2-3-4/ (OR4-N-2-3-4-del fast-OR4-N-2-3-4))
;
(sm-ckt (fast-OR4-N-1-2-3-4 (a b c d) (z))
	(or (or (or (not a) (not b)) (not c)) (not d))
)
(def (OR4-N-1-2-3-4-delay) :1,5:)
(def (OR4-N-1-2-3-4-one-delay (a) (b))(delay-buffer a b OR4-N-1-2-3-4-delay))
(def (OR4-N-1-2-3-4-del ckt) (connect OR4-N-1-2-3-4-one-delay ckt #f #t))
(def /OR4-N-1-2-3-4/ (OR4-N-1-2-3-4-del fast-OR4-N-1-2-3-4))
;
(genc-ckt (fast-C2 (a b) (z))
        (and a b)
        (and (not a) (not b))
)
(def (C2-delay) :2,8:)
(def (C2-one-delay (a) (b)) (delay-buffer a b C2-delay))
(def (C2-del ckt) (connect C2-one-delay ckt #f #t))
(def /C2/ (C2-del fast-C))

(def (iC2-del ckt) (connect C2-one-delay ckt #f #f))
(def /iC2/ (iC2-del fast-C))
;
(genc-ckt (fast-C2-N-1 (a b) (z))
        (and (not a) b)
        (and a (not b))
)
(def (C2-N-1-delay) :2,8:)
(def (C2-N-1-one-delay (a) (b)) (delay-buffer a b C2-N-1-delay))
(def (C2-N-1-del ckt) (connect C2-N-1-one-delay ckt #f #t))
(def /C2-N-1/ (C2-N-1-del fast-C2-N-1))

(def (iC2-N-1-del ckt) (connect C2-N-1-one-delay ckt #f #f))
(def /iC2-N-1/ (iC2-N-1-del fast-C2-N-1))
;
(genc-ckt (fast-C2-N-2 (a b) (z))
        (and a (not b))
        (and (not a) b)
)
(def (C2-N-2-delay) :2,8:)
(def (C2-N-2-one-delay (a) (b)) (delay-buffer a b C2-N-2-delay))
(def (C2-N-2-del ckt) (connect C2-N-2-one-delay ckt #f #t))
(def /C2-N-2/ (C2-N-2-del fast-C2-N-2))

(def (iC2-N-2-del ckt) (connect C2-N-2-one-delay ckt #f #f))
(def /iC2-N-2/ (iC2-N-2-del fast-C2-N-2))
;
(genc-ckt (fast-C2-N-1-2 (a b) (z))
        (and (not a) (not b))
        (and a b)
)
(def (C2-N-1-2-delay) :2,8:)
(def (C2-N-1-2-one-delay (a) (b)) (delay-buffer a b C2-N-1-2-delay))
(def (C2-N-1-2-del ckt) (connect C2-N-1-2-one-delay ckt #f #t))
(def /C2-N-1-2/ (C2-N-1-2-del fast-C2-N-1-2))

(def (iC2-N-1-2-del ckt) (connect C2-N-1-2-one-delay ckt #f #f))
(def /iC2-N-1-2/ (iC2-N-1-2-del fast-C2-N-1-2))
