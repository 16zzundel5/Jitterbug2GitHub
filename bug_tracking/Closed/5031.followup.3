From moschino21@gmail.com  Wed Jul  7 16:04:35 2010
Return-Path: <moschino21@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on chou.ece.utah.edu
X-Spam-Level: ****
X-Spam-Status: No, score=4.3 required=5.0 tests=BAYES_50,DNS_FROM_OPENWHOIS,
	FH_DATE_PAST_20XX,HTML_MESSAGE autolearn=no version=3.2.5
Received: from mail-gw0-f42.google.com (mail-gw0-f42.google.com [74.125.83.42])
	by chou.ece.utah.edu (8.14.3/8.13.1) with ESMTP id o67M4Yg4023885
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Wed, 7 Jul 2010 16:04:34 -0600
Received: by gwb15 with SMTP id 15so75925gwb.15
        for <atacs-bugs@vlsigroup.ece.utah.edu>; Wed, 07 Jul 2010 15:04:34 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:mime-version:received:in-reply-to
         :references:from:date:message-id:subject:to:cc:content-type;
        bh=rlATb1udUl3GywO3TP3HmOekR15PFXAZgfsnBzkkwXY=;
        b=PzIPtrkZSjKmcELVfGSfytFDQgU94cMNuFfD9gDq7usy0BkUxsU3xrVp6hHdH2lsuX
         YC1+aPyAFdPL6sWD7113QAEc7e+GEeLRUcCtwoxV1N6ivy1JNNnYp2IQIoU/z2ov9B/a
         HijrALgR4GKmZQoxy3uwSSztRC1h3VmUQrXqM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        b=vovNDUtesScDEGC7ytEOMrujju42PCl4TIiH/tJdjHfrpb/Eqzv7FXj/ZWKWWxOZ92
         +1Gavazhsdubh4yr59k8XMy4vcXhtpuBqG9zllZV1ti3gH95BEGs+X6BPFvqNSQcwlHq
         AmeZehs7c6R8p8qPt3cQzUxTsLOx9ZJjh/LVA=
Received: by 10.90.113.17 with SMTP id l17mr578738agc.205.1278540273769; Wed, 
	07 Jul 2010 15:04:33 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.90.29.20 with HTTP; Wed, 7 Jul 2010 15:04:13 -0700 (PDT)
In-Reply-To: <AA6DC632-25CF-4620-A7E4-5488EE41861B@gmail.com>
References: <201006301634.o5UGYRNP018474@chou.ece.utah.edu> 
	<8CADD415-8853-405F-B814-A08B4FB9B300@gmail.com> <AA6DC632-25CF-4620-A7E4-5488EE41861B@gmail.com>
From: Zhen Zhang <moschino21@gmail.com>
Date: Wed, 7 Jul 2010 16:04:13 -0600
Message-ID: <AANLkTilqps18LrWA3Yjgjnyh-EhcnRTxLHBlg2Pm17KU@mail.gmail.com>
Subject: Re: BUG: Delay expressions fails the lhpn parser (PR#5031)
To: Robert Thacker <rat103070@gmail.com>
Cc: Chris Myers <atacs-bugs@vlsigroup.ece.utah.edu>
Content-Type: multipart/alternative; boundary=0016362835a6d95f9f048ad35ab0

--0016362835a6d95f9f048ad35ab0
Content-Type: text/plain; charset=ISO-8859-1

It works correctly now. Move to Closed.

On Wed, Jun 30, 2010 at 1:28 PM, Robert Thacker <rat103070@gmail.com> wrote:

> should be fixed.  Chris, it runs through atacs, but if the syntax is still
> off let me know.
>
> On Jun 30, 2010, at 10:52 AM, Robert Thacker wrote:
>
> > s2lpn was written before the uniform expressions existed.  it dumps the
> old fashioned [l,u] delay syntax.  I should be able to fix this in short
> order.  I'll let y'all know when it's done.
> >
> > Rob
> > On Jun 30, 2010, at 10:34 AM, Chris Myers wrote:
> >
> >> Hi Zhen,
> >>
> >> If there is a bounded delay, it now must be put into a uniform
> statement.
> >> Namely, it should be:
> >>
> >> uniform(delayL+1,delayU+2)
> >>
> >> The only time you can use the [l,u] is when l and u are numbers.  If
> they are
> >> expressions, it must be enclosed in uniform.  Therefore, this is a bug
> in either
> >> the instruction file or s compiler.
> >>
> >> Robert: please look into this.
> >>
> >> Chris
> >>
> >> --000e0cd32ed8db4f1304892ffecf
> >>> Content-Type: text/plain; charset=ISO-8859-1
> >>>
> >>> I compiled the following .s file, which contains expressions for delay
> >>> assignments, to .lpn and it looks that the generated LPN file is
> correct.
> >>> When I bring it up in the transition editor, the delay assignment for
> t0
> >>> becomes uniform(delayL,delayU), but t1 is (delayL+1),(delayU+2), which
> >>> generates an error for t1.
> >>>
> >>> ;@ include <example.inst>
> >>> ;@ init_val    tcnt0 0
> >>> ;@ init_val    tmax0 65536
> >>> ;@ init_val    delayL 1
> >>> ;@ init_val    delayU 1
> >>> ;@ mark
> >>> t_count    set_val tcnt0<=tmax0 tcnt0 tcnt0+1 delayL delayU
> >>>       link t_count
> >>> t_count    set_val tcnt0>tmax0 tcnt0 0 (delayL+1) (delayU+2)
> >>>       link t_count
> >>>
> >>> Generated LPN file:
> >>> .dummy t0 t1
> >>> #@.variables delayL delayU tcnt0 tmax0
> >>> #|.places t_count
> >>> .graph
> >>> t_count t0
> >>> t0 t_count
> >>> t_count t1
> >>> t1 t_count
> >>> .marking { t_count }
> >>> #@.init_vals {<delayL=1><delayU=1><tcnt0=0><tmax0=65536>}
> >>> #@.enablings {<t0=[tcnt0<=tmax0]><t1=[tcnt0>tmax0]>}
> >>> #@.assignments {<t0=[tcnt0:=tcnt0+1]><t1=[tcnt0:=0]>}
> >>> #@.delay_assignments {<t0=[delayL,delayU]><t1=[(delayL+1),(delayU+2)]>}
> >>> .end
> >>> --
> >>> Zhen Zhang
> >>>
> >>> --000e0cd32ed8db4f1304892ffecf
> >>> Content-Type: text/html; charset=ISO-8859-1
> >>> Content-Transfer-Encoding: quoted-printable
> >>>
> >>> I compiled the following .s file, which contains expressions for delay
> assi=
> >>> gnments, to .lpn and it looks that the generated LPN file is correct.
> When =
> >>> I bring it up in the transition editor, the delay assignment for t0
> becomes=
> >>> uniform(delayL,delayU), but t1 is (delayL+1),(delayU+2), which
> generates a=
> >>> n error for t1. <br>
> >>>
> >>> <br>;@ include <example.inst><br>;@ init_val=A0=A0=A0 tcnt0 0<br>;@ i=
> >>> nit_val=A0=A0=A0 tmax0 65536<br>;@ init_val=A0=A0=A0 delayL 1<br>;@
> init_va=
> >>> l=A0=A0=A0 delayU 1<br>;@ mark<br>t_count=A0=A0=A0 set_val
> tcnt0<=3Dtmax=
> >>> 0 tcnt0 tcnt0+1 <span style=3D"background-color: rgb(255, 204,
> 0);">delayL =
> >>> delayU</span><br>
> >>>
> >>> =A0=A0=A0 =A0=A0=A0 link t_count<br>t_count=A0=A0=A0 set_val
> tcnt0>tmax0=
> >>> tcnt0 0 <span style=3D"background-color: rgb(255, 204, 0);">(delayL+1)
> (de=
> >>> layU+2)</span><br>=A0=A0=A0 =A0=A0=A0 link t_count<br><br>Generated LPN
> fil=
> >>> e: <br>.dummy t0 t1<br>#@.variables delayL delayU tcnt0 tmax0<br>
> >>>
> >>> #|.places t_count<br>.graph<br>t_count t0<br>t0 t_count<br>t_count
> t1<br>t1=
> >>> t_count<br>.marking { t_count }<br>#@.init_vals {<delayL=3D1><del=
> >>> ayU=3D1><tcnt0=3D0><tmax0=3D65536>}<br>#@.enablings {<t0=
> >>> =3D[tcnt0<=3Dtmax0]><t1=3D[tcnt0>tmax0]>}<br>
> >>>
> >>> #@.assignments {<t0=3D[tcnt0:=3Dtcnt0+1]><t1=3D[tcnt0:=3D0]>}<b=
> >>> r><span style=3D"background-color: rgb(255, 204,
> 0);">#@.delay_assignments =
> >>> {<t0=3D[delayL,delayU]><t1=3D[(delayL+1),(delayU+2)]>}</span><b=
> >>> r>.end<br>
> >>>
> >>> -- <br>Zhen Zhang<br>
> >>>
> >>> --000e0cd32ed8db4f1304892ffecf--
> >>>
> >>>
> >
>
>


-- 
Zhen Zhang

--0016362835a6d95f9f048ad35ab0
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

It works correctly now. Move to Closed. <br><br><div class=3D"gmail_quote">=
On Wed, Jun 30, 2010 at 1:28 PM, Robert Thacker <span dir=3D"ltr">&lt;<a hr=
ef=3D"mailto:rat103070@gmail.com">rat103070@gmail.com</a>&gt;</span> wrote:=
<br>

<blockquote class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, =
204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">should be fixed. =
=A0Chris, it runs through atacs, but if the syntax is still off let me know=
.<br>


<div><div></div><div class=3D"h5"><br>
On Jun 30, 2010, at 10:52 AM, Robert Thacker wrote:<br>
<br>
&gt; s2lpn was written before the uniform expressions existed. =A0it dumps =
the old fashioned [l,u] delay syntax. =A0I should be able to fix this in sh=
ort order. =A0I&#39;ll let y&#39;all know when it&#39;s done.<br>
&gt;<br>
&gt; Rob<br>
&gt; On Jun 30, 2010, at 10:34 AM, Chris Myers wrote:<br>
&gt;<br>
&gt;&gt; Hi Zhen,<br>
&gt;&gt;<br>
&gt;&gt; If there is a bounded delay, it now must be put into a uniform sta=
tement.<br>
&gt;&gt; Namely, it should be:<br>
&gt;&gt;<br>
&gt;&gt; uniform(delayL+1,delayU+2)<br>
&gt;&gt;<br>
&gt;&gt; The only time you can use the [l,u] is when l and u are numbers. =
=A0If they are<br>
&gt;&gt; expressions, it must be enclosed in uniform. =A0Therefore, this is=
 a bug in either<br>
&gt;&gt; the instruction file or s compiler.<br>
&gt;&gt;<br>
&gt;&gt; Robert: please look into this.<br>
&gt;&gt;<br>
&gt;&gt; Chris<br>
&gt;&gt;<br>
&gt;&gt; --000e0cd32ed8db4f1304892ffecf<br>
&gt;&gt;&gt; Content-Type: text/plain; charset=3DISO-8859-1<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; I compiled the following .s file, which contains expressions f=
or delay<br>
&gt;&gt;&gt; assignments, to .lpn and it looks that the generated LPN file =
is correct.<br>
&gt;&gt;&gt; When I bring it up in the transition editor, the delay assignm=
ent for t0<br>
&gt;&gt;&gt; becomes uniform(delayL,delayU), but t1 is (delayL+1),(delayU+2=
), which<br>
&gt;&gt;&gt; generates an error for t1.<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; ;@ include &lt;example.inst&gt;<br>
&gt;&gt;&gt; ;@ init_val =A0 =A0tcnt0 0<br>
&gt;&gt;&gt; ;@ init_val =A0 =A0tmax0 65536<br>
&gt;&gt;&gt; ;@ init_val =A0 =A0delayL 1<br>
&gt;&gt;&gt; ;@ init_val =A0 =A0delayU 1<br>
&gt;&gt;&gt; ;@ mark<br>
&gt;&gt;&gt; t_count =A0 =A0set_val tcnt0&lt;=3Dtmax0 tcnt0 tcnt0+1 delayL =
delayU<br>
&gt;&gt;&gt; =A0 =A0 =A0 link t_count<br>
&gt;&gt;&gt; t_count =A0 =A0set_val tcnt0&gt;tmax0 tcnt0 0 (delayL+1) (dela=
yU+2)<br>
&gt;&gt;&gt; =A0 =A0 =A0 link t_count<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Generated LPN file:<br>
&gt;&gt;&gt; .dummy t0 t1<br>
&gt;&gt;&gt; #@.variables delayL delayU tcnt0 tmax0<br>
&gt;&gt;&gt; #|.places t_count<br>
&gt;&gt;&gt; .graph<br>
&gt;&gt;&gt; t_count t0<br>
&gt;&gt;&gt; t0 t_count<br>
&gt;&gt;&gt; t_count t1<br>
&gt;&gt;&gt; t1 t_count<br>
&gt;&gt;&gt; .marking { t_count }<br>
&gt;&gt;&gt; #@.init_vals {&lt;delayL=3D1&gt;&lt;delayU=3D1&gt;&lt;tcnt0=3D=
0&gt;&lt;tmax0=3D65536&gt;}<br>
&gt;&gt;&gt; #@.enablings {&lt;t0=3D[tcnt0&lt;=3Dtmax0]&gt;&lt;t1=3D[tcnt0&=
gt;tmax0]&gt;}<br>
&gt;&gt;&gt; #@.assignments {&lt;t0=3D[tcnt0:=3Dtcnt0+1]&gt;&lt;t1=3D[tcnt0=
:=3D0]&gt;}<br>
&gt;&gt;&gt; #@.delay_assignments {&lt;t0=3D[delayL,delayU]&gt;&lt;t1=3D[(d=
elayL+1),(delayU+2)]&gt;}<br>
&gt;&gt;&gt; .end<br>
&gt;&gt;&gt; --<br>
&gt;&gt;&gt; Zhen Zhang<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; --000e0cd32ed8db4f1304892ffecf<br>
&gt;&gt;&gt; Content-Type: text/html; charset=3DISO-8859-1<br>
&gt;&gt;&gt; Content-Transfer-Encoding: quoted-printable<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; I compiled the following .s file, which contains expressions f=
or delay assi=3D<br>
&gt;&gt;&gt; gnments, to .lpn and it looks that the generated LPN file is c=
orrect. When =3D<br>
&gt;&gt;&gt; I bring it up in the transition editor, the delay assignment f=
or t0 becomes=3D<br>
&gt;&gt;&gt; uniform(delayL,delayU), but t1 is (delayL+1),(delayU+2), which=
 generates a=3D<br>
&gt;&gt;&gt; n error for t1. &lt;br&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; &lt;br&gt;;@ include &lt;example.inst&gt;&lt;br&gt;;@ init_val=
=3DA0=3DA0=3DA0 tcnt0 0&lt;br&gt;;@ i=3D<br>
&gt;&gt;&gt; nit_val=3DA0=3DA0=3DA0 tmax0 65536&lt;br&gt;;@ init_val=3DA0=
=3DA0=3DA0 delayL 1&lt;br&gt;;@ init_va=3D<br>
&gt;&gt;&gt; l=3DA0=3DA0=3DA0 delayU 1&lt;br&gt;;@ mark&lt;br&gt;t_count=3D=
A0=3DA0=3DA0 set_val tcnt0&lt;=3D3Dtmax=3D<br>
&gt;&gt;&gt; 0 tcnt0 tcnt0+1 &lt;span style=3D3D&quot;background-color: rgb=
(255, 204, 0);&quot;&gt;delayL =3D<br>
&gt;&gt;&gt; delayU&lt;/span&gt;&lt;br&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; =3DA0=3DA0=3DA0 =3DA0=3DA0=3DA0 link t_count&lt;br&gt;t_count=
=3DA0=3DA0=3DA0 set_val tcnt0&gt;tmax0=3D<br>
&gt;&gt;&gt; tcnt0 0 &lt;span style=3D3D&quot;background-color: rgb(255, 20=
4, 0);&quot;&gt;(delayL+1) (de=3D<br>
&gt;&gt;&gt; layU+2)&lt;/span&gt;&lt;br&gt;=3DA0=3DA0=3DA0 =3DA0=3DA0=3DA0 =
link t_count&lt;br&gt;&lt;br&gt;Generated LPN fil=3D<br>
&gt;&gt;&gt; e: &lt;br&gt;.dummy t0 t1&lt;br&gt;#@.variables delayL delayU =
tcnt0 tmax0&lt;br&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; #|.places t_count&lt;br&gt;.graph&lt;br&gt;t_count t0&lt;br&gt=
;t0 t_count&lt;br&gt;t_count t1&lt;br&gt;t1=3D<br>
&gt;&gt;&gt; t_count&lt;br&gt;.marking { t_count }&lt;br&gt;#@.init_vals {&=
lt;delayL=3D3D1&gt;&lt;del=3D<br>
&gt;&gt;&gt; ayU=3D3D1&gt;&lt;tcnt0=3D3D0&gt;&lt;tmax0=3D3D65536&gt;}&lt;br=
&gt;#@.enablings {&lt;t0=3D<br>
&gt;&gt;&gt; =3D3D[tcnt0&lt;=3D3Dtmax0]&gt;&lt;t1=3D3D[tcnt0&gt;tmax0]&gt;}=
&lt;br&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; #@.assignments {&lt;t0=3D3D[tcnt0:=3D3Dtcnt0+1]&gt;&lt;t1=3D3D=
[tcnt0:=3D3D0]&gt;}&lt;b=3D<br>
&gt;&gt;&gt; r&gt;&lt;span style=3D3D&quot;background-color: rgb(255, 204, =
0);&quot;&gt;#@.delay_assignments =3D<br>
&gt;&gt;&gt; {&lt;t0=3D3D[delayL,delayU]&gt;&lt;t1=3D3D[(delayL+1),(delayU+=
2)]&gt;}&lt;/span&gt;&lt;b=3D<br>
&gt;&gt;&gt; r&gt;.end&lt;br&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; -- &lt;br&gt;Zhen Zhang&lt;br&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; --000e0cd32ed8db4f1304892ffecf--<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;<br>
<br>
</div></div></blockquote></div><br><br clear=3D"all"><br>-- <br>Zhen Zhang<=
br>

--0016362835a6d95f9f048ad35ab0--

