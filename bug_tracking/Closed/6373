From zhen.zhang@utah.edu  Tue Sep  1 16:20:38 2015
Return-Path: <zhen.zhang@utah.edu>
Received: from ipo4.cc.utah.edu (ipo4.cc.utah.edu [155.97.144.24])
	by chou.ece.utah.edu (8.14.9/8.14.4) with ESMTP id t81MKcER014834
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Tue, 1 Sep 2015 16:20:38 -0600
X-IronPort-AV: E=Sophos;i="5.17,451,1437458400"; 
   d="scan'208";a="510182691"
Received: from mail-oi0-f42.google.com ([209.85.218.42])
  by ipo4smtp.cc.utah.edu with ESMTP/TLS/RC4-SHA; 01 Sep 2015 16:20:20 -0600
Received: by oiww128 with SMTP id w128so8569461oiw.2
        for <atacs-bugs@vlsigroup.ece.utah.edu>; Tue, 01 Sep 2015 15:20:20 -0700 (PDT)
X-Received: by 10.202.93.7 with SMTP id r7mr18068522oib.124.1441146020154;
 Tue, 01 Sep 2015 15:20:20 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.202.169.129 with HTTP; Tue, 1 Sep 2015 15:19:40 -0700 (PDT)
From: Zhen Zhang <zhen.zhang@utah.edu>
Date: Tue, 1 Sep 2015 16:19:40 -0600
Message-ID: <CA+LVOvkRike15vsHmF4AXWipaEDNULRYBZuC_88_PQiSuFvjbQ@mail.gmail.com>
Subject: BUG: VHDL compiler does not compile the Boolean condition for "while"
 loop correctly
To: atacs-bugs <atacs-bugs@vlsigroup.ece.utah.edu>
Cc: "Chris J. Myers" <myers@ece.utah.edu>
Content-Type: text/plain; charset=UTF-8

The Boolean condition condition is compiled to a nondetermnistic
choice in LPN: a place with two postset transitions whose enabling
conditions are "true". Here is a detailed example that illustrate this
error. The relevant files mentioned below are located in
/home/ming/zhangz/nobackup/research/lpn/noc2by2_livelock_free.

The top-level file is top_arbiter_nack_2.vhd. The arbiter that takes
two inputs and nondeterministically selects one output is modeled in
arbiter_nack_2.vhd. The two inputs, namely an input from an IP router
and an input from a router that makes an illegal turn, compete for
sending its packet to the arbiter. While-loops are used in the arbiter
to model its behavior so that it rejects the illegal turn request
while serving a packet.

The compiling error is that the Boolean condition for the while loop
is missing, and only a nondeterministic decision between two choices
is produced: one exits the loop and the other remains in the loop.
This can be seen as the following place and transitions in
top_arbiter_nack_2_NEW.dot: p_62, d_13P_arbiter_nack_2_arb_w_111
(exiting the loop), and d_12_P_arbiter_nack_2_arb_w_111 (remaining in
the loop). They are in the leftmost LPN on the dot file.

