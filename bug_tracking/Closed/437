From eemercer@yuan.elen.utah.edu  Tue May  2 17:18:03 2000
Return-Path: <eemercer@yuan.elen.utah.edu>
Received: from localhost (eemercer@localhost)
	by shang.elen.utah.edu (8.9.3/8.9.3) with ESMTP id RAA08218
	for <atacs-bugs@shang.elen.utah.edu>; Tue, 2 May 2000 17:18:03 -0600
X-Authentication-Warning: shang.elen.utah.edu: eemercer owned process doing -bs
Date: Tue, 2 May 2000 17:18:02 -0600 (MDT)
From: Eric Mercer <eemercer@yuan.elen.utah.edu>
X-Sender: eemercer@shang.elen.utah.edu
To: atacs-bugs@shang.elen.utah.edu
Subject: Initial Value Specification in VHDL
Message-ID: <Pine.LNX.4.10.10005021714070.8205-100000@shang.elen.utah.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

ATACS seems to not correctly record initial value settings in the entity
specifications.  For example, if I have a buffer using an inverted phase
for the le (request) signal, then I would declare it as follows:

ENTITY buf_a IS
   PORT(
        le : INOUT std_logic := '1';
        r0 : INOUT std_logic := '0';
        r1 : INOUT std_logic := '0';
	l0 : IN std_logic;
	l1 : IN std_logic;
        re : IN std_logic
    );
END buf_a;

However, ATACS seems to drop the initial value of '1' from the signal, and
thus the signal start initially low.  This causes the system to deadlock.

Here is the command lined used in atacs:  

atacs -M20 -msmEmX -ya -sv buf_a_top buf_a

Here is the code:

LIBRARY ieee, work;
USE ieee.std_logic_1164.all;
use work.handshake.all;

ENTITY buf_a IS
   PORT(
        le : INOUT std_logic := '1';
        r0 : INOUT std_logic := '0';
        r1 : INOUT std_logic := '0';
	l0 : IN std_logic;
	l1 : IN std_logic;
        re : IN std_logic
    );
END buf_a;

ARCHITECTURE behavior of buf_a IS
BEGIN

  buf : process
  begin
    guard(re, '1');
    guard_or(l0, '1', l1, '1');

    if    (l0 = '1') then
      assign(r0, '1', 200, 300);
    else 
      assign(r1, '1', 200, 300);
    end if;

    assign(le, '0', 200, 300);
    guard(re, '0');

    if (r0 = '1') then
      assign (r0, '0', 200, 300);
    elsif (r1 = '1') then
      assign (r1, '0', 200, 300);
    end if;

    guard_and(l0, '0', l1, '0');    

    assign(le, '1', 200, 300);

  end process;
  
END behavior;

LIBRARY ieee, work;
USE ieee.std_logic_1164.all;
use work.handshake.all;
use work.nondeterminism.all;

ENTITY buf_a_env IS
   PORT(
        le : IN std_logic;
        r0 : IN std_logic;
        r1 : IN std_logic;
	l0 : INOUT std_logic := '0';
	l1 : INOUT std_logic := '0';
        re : INOUT std_logic := '0'
    );
END buf_a_env;

ARCHITECTURE behavior of buf_a_env IS
  variable choose : integer;
BEGIN

  l : process
  begin
    choose := selection(2);
    case choose is
      when 1 => assign(l0, '1', 200, inf);
      when others =>  assign(l1, '1', 200, inf);
    end case;
    
    guard(le, '0');
    
    if (l0 = '1') then
      assign(l0, '0', 200, inf);
    else
      assign(l1, '0', 200, inf);
    end if;
    
    guard(le, '1');

  end process;

  r : process
  begin
    assign(re, '1', 200, inf);
    guard_or(r0, '1', r1, '1');
    assign(re, '0', 200, inf);
    guard_and(r0, '0', r1, '0');    
  end process;
  
END behavior;

-- atacs -mV -mz -mU -mP -mT -ms -mD -lv -M20 -ya -sv buf_a_top.vhd
LIBRARY ieee, work;
USE ieee.std_logic_1164.all;

ENTITY buf_a_top IS
END buf_a_top;

ARCHITECTURE behavior of buf_a_top IS

  component buf_a_env		
    PORT(	
      le : IN std_logic;	
      r0 : IN std_logic;	
      r1 : IN std_logic;	
      l0 : INOUT std_logic;	
      l1 : INOUT std_logic;	
      re : INOUT std_logic
      );	
  END component;	

  component buf_a
    PORT(
      le : INOUT std_logic;
      r0 : INOUT std_logic;
      r1 : INOUT std_logic;
      l0 : IN std_logic;
      l1 : IN std_logic;
      re : IN std_logic
      ); 
  END component;

--   signal l0 : std_logic;
--   signal l1 : std_logic;
--   signal le : std_logic;
--   signal r0 : std_logic;
--   signal r1 : std_logic;
--   signal re : std_logic;

BEGIN
  env : buf_a_env
    port map ( le => le,
	       r0 => r0,
	       r1 => r1,
	       l0 => l0,
	       l1 => l1,
	       re => re
	       );

  the_buf : buf_a
    port map ( le => le,
	       r0 => r0,
	       r1 => r1,
	       l0 => l0,
	       l1 => l1,
	       re => re
	       );

end behavior;


-----
Eric G Mercer                                   eemercer@ee.utah.edu
MEB 4120 Dept. Electrical Engineering           Office: 801-581-8378
University of Utah                              FAX: 801-581-5281
Salt Lake City, UT 84112

