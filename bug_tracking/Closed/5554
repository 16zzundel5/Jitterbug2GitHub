From myers@eng.utah.edu  Mon Nov  7 08:26:14 2011
Return-Path: <myers@eng.utah.edu>
Received: from bowie.eng.utah.edu (bowie.eng.utah.edu [155.98.110.113])
	by chou.ece.utah.edu (8.14.5/8.14.4) with ESMTP id pA7FQEHg009465
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Mon, 7 Nov 2011 08:26:14 -0700
Received: from changcheng.ece.utah.edu ([155.98.26.227] helo=[192.168.1.103])
	by bowie.eng.utah.edu with esmtpsa (TLSv1:AES128-SHA:128)
	(Exim 4.72 (FreeBSD))
	(envelope-from <myers@eng.utah.edu>)
	id 1RNR5M-000Jc4-1q
	for atacs-bugs@vlsigroup.ece.utah.edu; Mon, 07 Nov 2011 08:26:08 -0700
From: "Chris J. Myers" <myers@ece.utah.edu>
Content-Type: multipart/alternative; boundary="Apple-Mail=_C41AA438-6182-4732-A9F4-2820794A7C6A"
Subject: CHANGE: change CSL syntax to use SBML functions
Date: Mon, 7 Nov 2011 08:26:15 -0700
References: <4354EE44-8813-4BA5-AEC9-6830DC7A95AF@ece.utah.edu>
To: Chris Myers <atacs-bugs@vlsigroup.ece.utah.edu>
Message-Id: <BBF68D44-33D6-4A21-A5AF-4A3FF2D3EEAD@ece.utah.edu>
Mime-Version: 1.0 (Apple Message framework v1251.1)
X-Mailer: Apple Mail (2.1251.1)
Sender: myers@eng.utah.edu


--Apple-Mail=_C41AA438-6182-4732-A9F4-2820794A7C6A
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=us-ascii



Begin forwarded message:

> From: "Chris J. Myers" <myers@ece.utah.edu>
> Subject: New CSL syntax
> Date: October 30, 2011 3:22:44 PM MDT
> To: Curtis Madsen <curtis.madsen@utah.edu>, Zhen Zhang =
<zhen.zhang@utah.edu>
> Cc: Home <myers@ece.utah.edu>
>=20
> Hi,
>=20
> I'm planning to change CSL syntax to use SBML functions within =
constraints instead.  Here is what I'm thinking:
>=20
> SS(<boolean formula>)=20
> 	steady state formula, evaluates to true always, so it will not =
terminate simulation, used in steady state Markov analysis only
>=20
> PG(<boolean formula for lower bound>,<boolean formula for upper =
bound>,<boolean formula for invariant>)
> 	transient formula, evaluates to true when lower bound formula is =
false, upper bound formula is false, or invariant is true
>=20
> 	Ex. PG(geq(t,10),leq(t,20),leq(X,3))
>=20
> 	Simulation will be terminated on a violation of this property.  =
Assuming simulation runs longer than 20 time units, it will be satisfied =
when the simulation reaches conclusion.
>=20
> PF(<boolean formula for lower bound>,<boolean formula for upper =
bound>,<boolean formula for goal>)
> 	transient formula, evaluates to true when lower bound formula is =
false, upper bound formula is false, or goal is false
>=20
> 	Ex. PF(geq(t,10),leq(t,20),geq(Y,3))
>=20
> 	Simulation will be terminated on satisfaction of this property.  =
Assuming simulation runs longer than 20 time units, it will be violated =
when the simulation reaches conclusion.
>=20
> Until formula can be written as two constraints, one PG and one PF.=20
>=20
> 	Ex. PU(geq(t,10),leq(t,20),leq(X,3),geq(Y,3))
>=20
> 		can be written as:
>=20
> 		PG(geq(t,10),leq(t,20),leq(X,3))
> 		PF(geq(t,10),leq(t,20),geq(Y,3))
>=20
> 		The first constraint will terminate simulation when the =
invariant fails first, while the second constraint will terminate =
simulation when the goal succeeds.  No termination also counts towards a =
failure.
>=20
> Please let me know whether I'm missing anything.  If this works, I =
likely will not be able to do this conversion automatically.  Instead, =
we will need to hand convert them.  I don't think we have too many =
models using CSL properties at this point, so it should be okay.  I will =
move the current CSL formulas into messages on constraints with "true" =
as the constraint.  This will at least keep them in the model as we =
convert to SBML.
>=20
> Chris
>=20


--Apple-Mail=_C41AA438-6182-4732-A9F4-2820794A7C6A
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=us-ascii

<html><head></head><body style=3D"word-wrap: break-word; =
-webkit-nbsp-mode: space; -webkit-line-break: after-white-space; =
"><br><div><br><div>Begin forwarded message:</div><br =
class=3D"Apple-interchange-newline"><blockquote type=3D"cite"><div =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>From: </b></span><span =
style=3D"font-family:'Helvetica'; font-size:medium;">"Chris J. Myers" =
&lt;<a =
href=3D"mailto:myers@ece.utah.edu">myers@ece.utah.edu</a>&gt;<br></span></=
div><div style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: =
0px; margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>Subject: =
</b></span><span style=3D"font-family:'Helvetica'; =
font-size:medium;"><b>New CSL syntax</b><br></span></div><div =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>Date: </b></span><span =
style=3D"font-family:'Helvetica'; font-size:medium;">October 30, 2011 =
3:22:44 PM MDT<br></span></div><div style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px;"><span =
style=3D"font-family:'Helvetica'; font-size:medium; color:rgba(0, 0, 0, =
1.0);"><b>To: </b></span><span style=3D"font-family:'Helvetica'; =
font-size:medium;">Curtis Madsen &lt;<a =
href=3D"mailto:curtis.madsen@utah.edu">curtis.madsen@utah.edu</a>&gt;, =
Zhen Zhang &lt;<a =
href=3D"mailto:zhen.zhang@utah.edu">zhen.zhang@utah.edu</a>&gt;<br></span>=
</div><div style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: =
0px; margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>Cc: </b></span><span =
style=3D"font-family:'Helvetica'; font-size:medium;">Home &lt;<a =
href=3D"mailto:myers@ece.utah.edu">myers@ece.utah.edu</a>&gt;<br></span></=
div><br><div>Hi,<br><br>I'm planning to change CSL syntax to use SBML =
functions within constraints instead. &nbsp;Here is what I'm =
thinking:<br><br>SS(&lt;boolean formula&gt;) <br><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span>steady =
state formula, evaluates to true always, so it will not terminate =
simulation, used in steady state Markov analysis =
only<br><br>PG(&lt;boolean formula for lower bound&gt;,&lt;boolean =
formula for upper bound&gt;,&lt;boolean formula for =
invariant&gt;)<br><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span>transient formula, evaluates to =
true when lower bound formula is false, upper bound formula is false, or =
invariant is true<br><br><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span>Ex. =
PG(geq(t,10),leq(t,20),leq(X,3))<br><br><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span>Simulation will be terminated on =
a violation of this property. &nbsp;Assuming simulation runs longer than =
20 time units, it will be satisfied when the simulation reaches =
conclusion.<br><br>PF(&lt;boolean formula for lower =
bound&gt;,&lt;boolean formula for upper bound&gt;,&lt;boolean formula =
for goal&gt;)<br><span class=3D"Apple-tab-span" style=3D"white-space:pre">=
	</span>transient formula, evaluates to true when lower bound =
formula is false, upper bound formula is false, or goal is =
false<br><br><span class=3D"Apple-tab-span" style=3D"white-space:pre">	=
</span>Ex. PF(geq(t,10),leq(t,20),geq(Y,3))<br><br><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	=
</span>Simulation will be terminated on satisfaction of this property. =
&nbsp;Assuming simulation runs longer than 20 time units, it will be =
violated when the simulation reaches conclusion.<br><br>Until formula =
can be written as two constraints, one PG and one PF. <br><br><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span>Ex. =
PU(geq(t,10),leq(t,20),leq(X,3),geq(Y,3))<br><br><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span>can be =
written as:<br><br><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	=
</span>PG(geq(t,10),leq(t,20),leq(X,3))<br><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	=
</span>PF(geq(t,10),leq(t,20),geq(Y,3))<br><br><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span>The first =
constraint will terminate simulation when the invariant fails first, =
while the second constraint will terminate simulation when the goal =
succeeds. &nbsp;No termination also counts towards a =
failure.<br><br>Please let me know whether I'm missing anything. =
&nbsp;If this works, I likely will not be able to do this conversion =
automatically. &nbsp;Instead, we will need to hand convert them. &nbsp;I =
don't think we have too many models using CSL properties at this point, =
so it should be okay. &nbsp;I will move the current CSL formulas into =
messages on constraints with "true" as the constraint. &nbsp;This will =
at least keep them in the model as we convert to =
SBML.<br><br>Chris<br><br></div></blockquote></div><br></body></html>=

--Apple-Mail=_C41AA438-6182-4732-A9F4-2820794A7C6A--

