From nroehner@comcast.net  Thu Aug 12 16:13:40 2010
Return-Path: <nroehner@comcast.net>
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on chou.ece.utah.edu
X-Spam-Level: ****
X-Spam-Status: No, score=4.6 required=5.0 tests=AWL,BAYES_50,
	DNS_FROM_OPENWHOIS,FH_DATE_PAST_20XX,HTML_MESSAGE autolearn=no version=3.2.5
Received: from qmta08.emeryville.ca.mail.comcast.net (qmta08.emeryville.ca.mail.comcast.net [76.96.30.80])
	by chou.ece.utah.edu (8.14.3/8.13.1) with ESMTP id o7CMDe0j024815
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Thu, 12 Aug 2010 16:13:40 -0600
Received: from omta19.emeryville.ca.mail.comcast.net ([76.96.30.76])
	by qmta08.emeryville.ca.mail.comcast.net with comcast
	id tZQl1e00A1eYJf8A8aDgi1; Thu, 12 Aug 2010 22:13:40 +0000
Received: from sz0128.ev.mail.comcast.net ([76.96.26.192])
	by omta19.emeryville.ca.mail.comcast.net with comcast
	id taDg1e00248h51001aDgNU; Thu, 12 Aug 2010 22:13:40 +0000
Date: Thu, 12 Aug 2010 22:13:40 +0000 (UTC)
From: nroehner@comcast.net
To: atacs-bugs@vlsigroup.ece.utah.edu
Message-ID: <1679743784.953516.1281651220005.JavaMail.root@sz0128a.emeryville.ca.mail.comcast.net>
Subject: BUG:  biochemical and dimerization abstractions generate incorrect
 forward rate laws
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_953515_1855874325.1281651220005"
X-Originating-IP: [155.98.26.227]
X-Mailer: Zimbra 6.0.5_GA_2420.RHEL4 (ZimbraWebClient - FF3.0 (Linux)/6.0.5_GA_2420.RHEL4)

------=_Part_953515_1855874325.1281651220005
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit

When checking biochemical abstraction, the forward rate term for an activation binding involving Biochemical_A_B changes from Ka*RNAP*pow(Biochemical_A_B, nc)*P to Ka*RNAP*pow(pow(Kb*A*B, 2), nc)*P, which results in Kb, A, and B all being raised to 2*nc. But, there should only be one biochemical per operator site; hence Kb, A, and B should be raised to nc, not 2*nc. A better abstraction would use pow(Kb*A*B, nc). 

When checking dimerization abstraction, the forward rate term for the activation binding involving A_2 changes from Ka*RNAP*pow(A_2, nc)*P to Ka*RNAP*Kd*pow(pow(A, 2), nc)*P. Kd is not raised to nc when this change is made, so the binding event involved in the formation of the second A_2 molecule (which would bind to the second operator site) is neglected. Also, it is somewhat inconsistent to substitute 2 for nd in the rate expression when the same is not done for nc. A better abstraction would use pow(Kd*pow(A, nd), nc). 

Nic 

------=_Part_953515_1855874325.1281651220005
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 7bit

<html><head><style type='text/css'>p { margin: 0; }</style></head><body><div style='font-family: Arial; font-size: 12pt; color: #000000'><font><font size="2">When checking biochemical abstraction, the forward rate
term for an activation binding involving Biochemical_A_B changes from
Ka*RNAP*pow(Biochemical_A_B, nc)*P to Ka*RNAP*pow(pow(Kb*A*B, 2),
nc)*P, which results in Kb, A, and B all being raised to 2*nc.&nbsp; But,
there should only be one biochemical per operator site; hence Kb, A,
and B should be raised to nc, not 2*nc.&nbsp; A better abstraction would use
pow(Kb*A*B, nc).<br><br></font></font><font><font size="2">When checking dimerization abstraction, the forward rate
term for the activation binding involving A_2 changes from
Ka*RNAP*pow(A_2, nc)*P to Ka*RNAP*Kd*pow(pow(A, 2), nc)*P.&nbsp; Kd is not
raised to nc when this change is made, so the binding event involved in
the formation of the second A_2 molecule (which would bind to the
second operator site) is neglected.&nbsp; Also, it is somewhat inconsistent
to substitute 2 for nd in the rate expression when the same is not done
for nc.&nbsp; A better abstraction would use pow(Kd*pow(A, nd), nc).</font></font><br><font><font size="2"><br>Nic<br></font></font></div></body></html>
------=_Part_953515_1855874325.1281651220005--

