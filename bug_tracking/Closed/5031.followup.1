From rat103070@gmail.com  Wed Jun 30 10:52:40 2010
Return-Path: <rat103070@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on chou.ece.utah.edu
X-Spam-Level: ****
X-Spam-Status: No, score=4.3 required=5.0 tests=BAYES_50,DNS_FROM_OPENWHOIS,
	FH_DATE_PAST_20XX autolearn=no version=3.2.5
Received: from mail-pv0-f170.google.com (mail-pv0-f170.google.com [74.125.83.170])
	by chou.ece.utah.edu (8.14.3/8.13.1) with ESMTP id o5UGqeOe018854;
	Wed, 30 Jun 2010 10:52:40 -0600
Received: by pvc21 with SMTP id 21so458435pvc.15
        for <multiple recipients>; Wed, 30 Jun 2010 09:52:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:subject:mime-version
         :content-type:from:in-reply-to:date:cc:content-transfer-encoding
         :message-id:references:to:x-mailer;
        bh=C3ofcdeWqISbWBr/HlORQOg4qJE8zLx3xg22zTkP1Kw=;
        b=aUgAV2VHo7S0OZD3cWJ7Y4tAegmEq00SzlRgE1RssmQtixH/riCNERPVn7U3I7v7kp
         +b3nQVkh4UUpYFruXE1KGRKPgfTot4DVA6aQUzpuKHohdk2iMhJiNPxQ7ikGPK9kqZRF
         X40sFwpgHUlYWEInMa8v2fCRatz7XmOEVjGCY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=subject:mime-version:content-type:from:in-reply-to:date:cc
         :content-transfer-encoding:message-id:references:to:x-mailer;
        b=v8jLu3fs+S8pBPK4wJJJw72seHyanH5eo0OLwiY07MNS8k34b2hzn1WFtw667c4qAn
         FVgrFujyHRsNSny6cTTBaKE4T3zcczwLZwqbwCbNsRUKtha0DMK9D1yNLU19eoV2Tudz
         C8Iin8CLUBdf9pysm/UKvZdpFdFloyKEqrve8=
Received: by 10.114.13.2 with SMTP id 2mr4037976wam.79.1277916757318;
        Wed, 30 Jun 2010 09:52:37 -0700 (PDT)
Received: from 155-99-218-73.uconnect.utah.edu (155-99-218-73.uconnect.utah.edu [155.99.218.73])
        by mx.google.com with ESMTPS id t25sm55170289wak.22.2010.06.30.09.52.35
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Wed, 30 Jun 2010 09:52:36 -0700 (PDT)
Subject: Re: BUG: Delay expressions fails the lhpn parser (PR#5031)
Mime-Version: 1.0 (Apple Message framework v1081)
Content-Type: text/plain; charset=us-ascii
From: Robert Thacker <rat103070@gmail.com>
In-Reply-To: <201006301634.o5UGYRNP018474@chou.ece.utah.edu>
Date: Wed, 30 Jun 2010 10:52:34 -0600
Cc: moschino21@gmail.com, thacker@vlsigroup.ece.utah.edu
Content-Transfer-Encoding: quoted-printable
Message-Id: <8CADD415-8853-405F-B814-A08B4FB9B300@gmail.com>
References: <201006301634.o5UGYRNP018474@chou.ece.utah.edu>
To: Chris Myers <atacs-bugs@vlsigroup.ece.utah.edu>
X-Mailer: Apple Mail (2.1081)

s2lpn was written before the uniform expressions existed.  it dumps the =
old fashioned [l,u] delay syntax.  I should be able to fix this in short =
order.  I'll let y'all know when it's done.

Rob
On Jun 30, 2010, at 10:34 AM, Chris Myers wrote:

> Hi Zhen,
>=20
> If there is a bounded delay, it now must be put into a uniform =
statement.=20
> Namely, it should be:
>=20
> uniform(delayL+1,delayU+2)
>=20
> The only time you can use the [l,u] is when l and u are numbers.  If =
they are
> expressions, it must be enclosed in uniform.  Therefore, this is a bug =
in either
> the instruction file or s compiler.
>=20
> Robert: please look into this.
>=20
> Chris
>=20
> --000e0cd32ed8db4f1304892ffecf
>> Content-Type: text/plain; charset=3DISO-8859-1
>>=20
>> I compiled the following .s file, which contains expressions for =
delay
>> assignments, to .lpn and it looks that the generated LPN file is =
correct.
>> When I bring it up in the transition editor, the delay assignment for =
t0
>> becomes uniform(delayL,delayU), but t1 is (delayL+1),(delayU+2), =
which
>> generates an error for t1.
>>=20
>> ;@ include <example.inst>
>> ;@ init_val    tcnt0 0
>> ;@ init_val    tmax0 65536
>> ;@ init_val    delayL 1
>> ;@ init_val    delayU 1
>> ;@ mark
>> t_count    set_val tcnt0<=3Dtmax0 tcnt0 tcnt0+1 delayL delayU
>>        link t_count
>> t_count    set_val tcnt0>tmax0 tcnt0 0 (delayL+1) (delayU+2)
>>        link t_count
>>=20
>> Generated LPN file:
>> .dummy t0 t1
>> #@.variables delayL delayU tcnt0 tmax0
>> #|.places t_count
>> .graph
>> t_count t0
>> t0 t_count
>> t_count t1
>> t1 t_count
>> .marking { t_count }
>> #@.init_vals {<delayL=3D1><delayU=3D1><tcnt0=3D0><tmax0=3D65536>}
>> #@.enablings {<t0=3D[tcnt0<=3Dtmax0]><t1=3D[tcnt0>tmax0]>}
>> #@.assignments {<t0=3D[tcnt0:=3Dtcnt0+1]><t1=3D[tcnt0:=3D0]>}
>> #@.delay_assignments =
{<t0=3D[delayL,delayU]><t1=3D[(delayL+1),(delayU+2)]>}
>> .end
>> --=20
>> Zhen Zhang
>>=20
>> --000e0cd32ed8db4f1304892ffecf
>> Content-Type: text/html; charset=3DISO-8859-1
>> Content-Transfer-Encoding: quoted-printable
>>=20
>> I compiled the following .s file, which contains expressions for =
delay assi=3D
>> gnments, to .lpn and it looks that the generated LPN file is correct. =
When =3D
>> I bring it up in the transition editor, the delay assignment for t0 =
becomes=3D
>> uniform(delayL,delayU), but t1 is (delayL+1),(delayU+2), which =
generates a=3D
>> n error for t1. <br>
>>=20
>> <br>;@ include <example.inst><br>;@ init_val=3DA0=3DA0=3DA0 tcnt0 =
0<br>;@ i=3D
>> nit_val=3DA0=3DA0=3DA0 tmax0 65536<br>;@ init_val=3DA0=3DA0=3DA0 =
delayL 1<br>;@ init_va=3D
>> l=3DA0=3DA0=3DA0 delayU 1<br>;@ mark<br>t_count=3DA0=3DA0=3DA0 =
set_val tcnt0<=3D3Dtmax=3D
>> 0 tcnt0 tcnt0+1 <span style=3D3D"background-color: rgb(255, 204, =
0);">delayL =3D
>> delayU</span><br>
>>=20
>> =3DA0=3DA0=3DA0 =3DA0=3DA0=3DA0 link t_count<br>t_count=3DA0=3DA0=3DA0 =
set_val tcnt0>tmax0=3D
>> tcnt0 0 <span style=3D3D"background-color: rgb(255, 204, =
0);">(delayL+1) (de=3D
>> layU+2)</span><br>=3DA0=3DA0=3DA0 =3DA0=3DA0=3DA0 link =
t_count<br><br>Generated LPN fil=3D
>> e: <br>.dummy t0 t1<br>#@.variables delayL delayU tcnt0 tmax0<br>
>>=20
>> #|.places t_count<br>.graph<br>t_count t0<br>t0 t_count<br>t_count =
t1<br>t1=3D
>> t_count<br>.marking { t_count }<br>#@.init_vals {<delayL=3D3D1><del=3D
>> ayU=3D3D1><tcnt0=3D3D0><tmax0=3D3D65536>}<br>#@.enablings {<t0=3D
>> =3D3D[tcnt0<=3D3Dtmax0]><t1=3D3D[tcnt0>tmax0]>}<br>
>>=20
>> #@.assignments {<t0=3D3D[tcnt0:=3D3Dtcnt0+1]><t1=3D3D[tcnt0:=3D3D0]>}<b=
=3D
>> r><span style=3D3D"background-color: rgb(255, 204, =
0);">#@.delay_assignments =3D
>> {<t0=3D3D[delayL,delayU]><t1=3D3D[(delayL+1),(delayU+2)]>}</span><b=3D
>> r>.end<br>
>>=20
>> -- <br>Zhen Zhang<br>
>>=20
>> --000e0cd32ed8db4f1304892ffecf--
>>=20
>>=20

