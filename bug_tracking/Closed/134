From peskin@ming.elen.utah.edu  Thu May 13 14:17:02 1999
Received: from ming.elen.utah.edu (ming.elen.utah.edu [128.110.18.208]) by yuan.elen.utah.edu with ESMTP (8.7.1/8.7.1) id OAA04656 for <atacs-bugs@shang.elen.utah.edu>; Thu, 13 May 1999 14:17:02 -0600 (MDT)
Received: (from peskin@localhost)
	by ming.elen.utah.edu (8.8.7/8.8.7) id OAA25685
	for atacs-bugs@shang.elen.utah.edu; Thu, 13 May 1999 14:17:13 -0600
Date: Thu, 13 May 1999 14:17:13 -0600
From: Eric Peskin <peskin@ming.elen.utah.edu>
Message-Id: <199905132017.OAA25685@ming.elen.utah.edu>
To: atacs-bugs@shang.elen.utah.edu
Subject: multiline comments are not parsing correctly

SYSTEM: linux (Linux ming.elen.utah.edu 2.0.36 #1 Tue Oct 13 22:17:11 EDT 1998 i686 unknown)
WHO:    peskin               
WHERE:  /home/song/peskin                
WHEN:   Thu May 13 14:16:30 MDT 1999                
WHAT:   -rwx------ 1 peskin 101 11845874 May 13 13:14 /home/song/peskin/atacs/atacs               
HOW:    atacs -lc comparitor            
OUTPUT:                       
                              
file:///home/song/peskin/atacs.log                 
Compiling comparitor.csp ... 
comparitor.csp: 2: syntax error.
ERROR:8:  No rules in system!
                              
                              
EXIT STATUS:  0  
              
file:///home/song/peskin/comparitor.csp
/****************************************************************************
 ** 1-bit Comparator
 ** INPUTS: Req, A, and B   
 ** OUTPUTS: E, G, L, and Ack
 ** NOTE: Even though this is a datapath element, I want to see what atacs
 ** will build
 ****************************************************************************/
module comparator;

  input  Req = {false, <1,10>};
  input  A   = {false, <1,10>};
  input  B   = {false, <1,10>};

  output E  = {false, <1,10>};
  output G  = {false, <1,10>};
  output L  = {false, <1,10>};
  output Ack = {false, <1,10>};

  process compare;
    *[ [Req] ; [   ( ~A & ~B ) -> E+ ; Ack+ ; [~Req] ; E- ; Ack-  
                 | ( ~A &  B ) -> L+ ; Ack+ ; [~Req] ; L- ; Ack-  
                 | (  A & ~B ) -> G+ ; Ack+ ; [~Req] ; G- ; Ack- 
                 | (  A &  B ) -> E+ ; Ack+ ; [~Req] ; E- ; Ack- 

               ]
     ]
  endprocess

  process env;
    *[ [   true -> Req+ ; [Ack] ; Req- ; [~Ack] 
         | true -> B+ ; Req+ ; [Ack] ; Req- ; B-  ; [~Ack] 
         | true -> A+ ; Req+ ; [Ack] ; Req- ; A-  ; [~Ack]
         | true -> ( A+ || B+ ) ; Req+ ; [Ack] ; Req- ; ( A- || B- ) ; [~Ack]
       ]
     ]
  endprocess

endmodule

              
              
file:///home/song/peskin/comparitor.er
.e 1
.i 0
.r 0
.n 0
.d 0
.c 0
.s 0
reset
# 
# INPUT EVENTS:
# 
# 
# OUTPUT EVENTS:
# 
# 
# DUMMY EVENTS:
# 
# 
# RULES:
# 
# 
# INITIAL RULES:
# 
# 
# RULES:
# 
# 
# INITIAL RULES:
# 
# 
# MERGERS:
# 
# 
# CONFLICTS:
# 
# 
# LOOPING CONFLICTS:
# 
              
