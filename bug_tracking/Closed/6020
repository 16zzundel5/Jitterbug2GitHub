From myers@eng.utah.edu  Sun Apr 13 11:45:14 2014
Return-Path: <myers@eng.utah.edu>
Received: from bowie.eng.utah.edu (bowie.eng.utah.edu [155.98.110.113])
	by chou.ece.utah.edu (8.14.7/8.14.4) with ESMTP id s3DHjE6p007971
	for <atacs-bugs@vlsigroup.ece.utah.edu>; Sun, 13 Apr 2014 11:45:14 -0600
Received: from [12.8.23.12] (helo=[10.199.32.94])
	by bowie.eng.utah.edu with esmtpsa (TLSv1:AES128-SHA:128)
	(Exim 4.72 (FreeBSD))
	(envelope-from <myers@eng.utah.edu>)
	id 1WZOff-0009Wj-0g
	for atacs-bugs@vlsigroup.ece.utah.edu; Sun, 13 Apr 2014 11:58:27 -0600
From: "Chris J. Myers" <myers@ece.utah.edu>
Content-Type: multipart/alternative; boundary="Apple-Mail=_14DCC19A-FFAD-4069-BCDA-B94BE5FB4157"
Subject: FEATURE: update libsbml to 5.10.0
Date: Sun, 13 Apr 2014 11:45:08 -0600
References: <53465C0B.4080200@caltech.edu>
To: Scott Glass <atacs-bugs@vlsigroup.ece.utah.edu>
Message-Id: <D5CDC1EB-B65A-4A4A-9D84-07514C707D06@ece.utah.edu>
Mime-Version: 1.0 (Mac OS X Mail 6.6 \(1510\))
X-Mailer: Apple Mail (2.1510)
Sender: myers@eng.utah.edu


--Apple-Mail=_14DCC19A-FFAD-4069-BCDA-B94BE5FB4157
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=iso-8859-1



Begin forwarded message:

> From: Sarah Keating <skeating@caltech.edu>
> Subject: [sbml-discuss] Release of libSBML-5.10.0
> Date: April 10, 2014 2:53:31 AM MDT
> To: SBML Discussion List <sbml-discuss@googlegroups.com>, LibSBML =
Development List <libsbml-development@googlegroups.com>
>=20
> ----------------------
> libSBML-5.10.0
> ----------------------
>=20
> We are pleased to announce the release of libSBML-5.10.0 which is
> available for download from
>=20
> https://sourceforge.net/projects/sbml/files/libsbml/5.10.0/
>=20
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
> 5.10.0 (2014-04-10)
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>=20
> STABLE RELEASE
>=20
> * New features
>=20
>   - New ASTNode infrastructure
>=20
>     The code underlying the ASTNode class has been refactored to
>     facilitate the extension of MathML by SBML L3 packages.  The
>     API and behaviour has not changed except in places where
>     invalid MathML was being incorrectly parsed or created. It is
>     no longer possible to add a child to an ASTNode that represents
>     a number, for example.
>=20
>     Extensive testing has been done to ensure that the API and
>     correct behaviour of the ASTNode class remains unchanged and
>     unless you have derived your own classes from the ASTNode class
>     this change should not affect your implementation in any way.
>=20
>     ** Please inform us if this turns out to be incorrect. We have
>     tried to anticipate and test use cases but we are aware that
>     it is possible that we have missed some.
>=20
>     In order to allow people to continue to use the original AST code
>     if they choose, the source code archives provide this code within
>     a 'math-legacy' directory and the libSBML configuration system
>     provides an option to build libSBML using this legacy code.
>=20
>   - General maintenance: we have done a number of sweeps of code to
>     identify and add such things as missing virtual functions.  We
>     have also investigated memory leaks reported by users and have
>     done some extensive memory leak checking on the more intensive
>     functionality such as validation/comp flattening etc.  However,
>     this remains an ongoing task.
>=20
>   - There is a new converter, the SBMLReactionConverter, which
>     will replace any Reactions within a Model with the equivalent
>     RateRules.  An example of the use of this converter can be
>     found at examples/c++/convertReactions.cpp.
>=20
>   - There are new functions available on the Model class:
>     InitialAssignment* getInitialAssignmentBySymbol(const std::string& =
symbol);
>     Rule* getRuleByVariable(const std::string& variable);
>     AssignmentRule* getAssignmentRuleByVariable(const std::string& =
variable);
>     RateRule* getRateRuleByVariable(const std::string& variable);
>     These functions return the designated object using the 'symbol' or
>     'variable' attribute.  This is duplicate functionality as the
>     objects can be retrieved using getRule and getInitialAssignment.
>     However the other similar functions on the Model class retrieve
>     objects by the 'id' attribute. If future versions of SBML
>     introduce the 'id' attribute on Rules and InitialAssignments we
>     will need functions that act differently.
>=20
>=20
>   - 'comp' package-specific updates:
>=20
>     - The code that facilitates resolving files in relation to
>       ExternalModelDefinitions has been reviewed and made as robust
>       as possible.
>=20
>     - The ability to customize the way SIds and SIdRefs are
>       renamed during the flattening process has been added. A
>       class of type PrefixTransformer can be created and assigned.
>       This allows the user to add additional changes to the renaming
>       process. An example that illustrates the use of this facility
>       to also rename the 'name' attribute of objects originating in
>       subModels has been included in the examples/c++/comp directory.
>=20
>     - Unit tests have been added for the C API, and this exposed some
>       missing functions. The missing functions have now been added.
> =09
>=20
> * Bug fixes
>=20
>   - There were issues with propagating the package-enabling
>     functionality through the children of an element.  These issues
>     have been resolved.
> =09
>   - The converters that apply structural changes to the SBML document
>     used a setDocument function that expected a const SBMLDocument
>     object. Since the converters change the document, and in fact
>     immediately re-cast the document object, this function was both
>     confusing and inaccurate.  There is now a setDocument function
>     that does not expect a const SBMLDocument object.
>=20
>   - There were some inconsistencies in the behaviour of LocalParameter
>     objects from SBML Level 3 in relation to the 'constant'
>     attribute. These have been fixed.
>=20
>=20
>   - 'layout' package-specific bug fixes:
>=20
>     - There were some discrepancies between the naming of arguments
>       to some constructors and the actual values being set using
>       these arguments. These have been corrected without changing
>       the resulting behaviour.
>=20
>     - Sometimes when an SBML Level 2 document with 'layout' and
>       'render' annotations was upgraded to SBML Level 3, the 'render'
>       namespace went missed from the annotation in the Level 3
>       document.  This has been fixed.
>=20
>     - The 'render' package "objectRole" attribute was not being
>       correctly handled by the 'layout' code when the 'render' package
>       was disabled.  This has been corrected.
>=20
>=20
>   - 'qual' package-specific bug fixes:
>=20
>     - Certain validation errors were not being correctly reported,
>       with either missing information or bad line numbers.  This
>       problem has been fixed.  Thanks to Nicolas Rodriguez for
>       reporting the problem.
>=20
>=20
> * Configuration/build system changes
>=20
>   - WARNING: There is a bug in the Microsoft Visual Studio 2013
>     compiler that can cause strange output when doing repetitive file
>     reading and writing.  We became aware of this when running our
>     unit tests on the comp flattening routines.
>     http://connect.microsoft.com/VisualStudio/feedback/details/
>     808199/visual-c-2013-floating-point-broken-on-first-use We
>     included a fix in our test files (libsbml/src/sbml/packages
>     /comp/util/test/TestRunner.c) but users should be aware that this
>     is an issue that may arise with this particular version of the
>     MSVC compiler.
>=20
>   - The CMake files have been updated to allow for the use when
>     libSBML is merely being referenced within a CMake build, rather
>     being specifically built.
>=20
>   - Both the GNU make and CMake configuration systems generate certain
>     header files that are specific to the libSBML build being
>     requested.  Previously, libSBML source code included project
>     definition files for MSVC.  These files were checked into SVN and
>     included within the released src archive distribution.  Their
>     inclusion could potentially cause problems for people who wanted
>     to create different build configurations from the same source
>     code.  Given that with CMake it is possible to generate MSVC
>     project files directly, we no longer include them in the source
>     archive distribution, and therefore, it is also not necessary to
>     include the header files generated by the configuration process.
>     Thus, these header files have been removed, and for CMake users
>     they will be generated within the build directory to facilitate
>     different builds using the same src tree.
>=20
>   - There were issues with classes exported across the Windows dll
>     interface.  These have been fixed, and we have added additional
>     tests to catch these issues.  Thanks to Andy Somogyi for reporting
>     the problem.
>=20
>=20
> * Miscellaneous
>=20
>   - Python installers for various Linux distributions are now
>     available from the Open Build Service and via pypi. Links to the
>     relevant release can be found in the documentation on SourceForge
>     download pages for libSBML.
>=20
>   - The copyright statement for all example programs that we produced
>     ourselves has been changed to use a less restrictive license, so
>     that users can use the examples in their software without
>     limitation.  The new license is the MIT license.
>=20
>   - The LICENSE.* files for libSBML now include a previously-missing
>     3rd party software acknowledgement for the Python argparse library
>     by Steven J. Bethard.  (The argparse.py module is included with
>     libSBML distributions.)
>=20
>   - A number of extraneous files have been removed from the
>     documentation source directory (docs/src/); in addition, the
>     directory has undergone some minor restructuring.
>=20
>=20
> EXPERIMENTAL RELEASE
>=20
> * New features
>=20
>   - Support for the 'arrays' package according to the specification
>     dated September 11, 2013 (0.1 alpha) has been added to the
>     experimental release files. Note the extended MathML is accessible
>     via the ASTNode class; however, the current version version does
>     not yet include support for parsing to and from infix notation.
>=20
>=20
>   - 'multi' package-specific updates:
>=20
>     - The ability to extend ASTNodes and hence use extended MathML
>       has been added and thus it is now possible to use the attributes
>       on the <ci> elements of math as specified by the 'multi'
>       package. The example relating to this has been updated =
accordingly.
>=20
>=20
>  * Bug fixes
>=20
>   - 'render' package-specific bug fixes:
>=20
>     - On occasion when an L2 document with layout and render
>       annotations was being upgraded to L3 the render namespace
>       was missed from the annotation in the L3 document.
>=20
>=20
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>=20
> Please report any problems you encounter using libSBML either to the
> mailing list libsbml-team@caltech.edu or using the issue tracker
> for libSBML at
>=20
> https://sourceforge.net/tracker/?group_id=3D71971&atid=3D942737
>=20
> Thanks
>=20
> the LibSBMLTeam
>=20
>=20
> --=20
> You received this message because you are subscribed to the Google =
Groups "sbml-discuss" group.
> To unsubscribe from this group and stop receiving emails from it, send =
an email to sbml-discuss+unsubscribe@googlegroups.com.
> To post to this group, send email to sbml-discuss@googlegroups.com.
> To view this discussion on the web visit =
https://groups.google.com/d/msgid/sbml-discuss/53465C0B.4080200%40caltech.=
edu.
> For more options, visit https://groups.google.com/d/optout.


--Apple-Mail=_14DCC19A-FFAD-4069-BCDA-B94BE5FB4157
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=iso-8859-1

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html =
charset=3Diso-8859-1"></head><body style=3D"word-wrap: break-word; =
-webkit-nbsp-mode: space; -webkit-line-break: after-white-space; =
"><br><div><br><div>Begin forwarded message:</div><br =
class=3D"Apple-interchange-newline"><blockquote type=3D"cite"><div =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>From: </b></span><span =
style=3D"font-family:'Helvetica'; font-size:medium;">Sarah Keating =
&lt;<a =
href=3D"mailto:skeating@caltech.edu">skeating@caltech.edu</a>&gt;<br></spa=
n></div><div style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: =
0px; margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>Subject: =
</b></span><span style=3D"font-family:'Helvetica'; =
font-size:medium;"><b>[sbml-discuss] Release of =
libSBML-5.10.0</b><br></span></div><div style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px;"><span =
style=3D"font-family:'Helvetica'; font-size:medium; color:rgba(0, 0, 0, =
1.0);"><b>Date: </b></span><span style=3D"font-family:'Helvetica'; =
font-size:medium;">April 10, 2014 2:53:31 AM MDT<br></span></div><div =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px;"><span style=3D"font-family:'Helvetica'; =
font-size:medium; color:rgba(0, 0, 0, 1.0);"><b>To: </b></span><span =
style=3D"font-family:'Helvetica'; font-size:medium;">SBML Discussion =
List &lt;<a =
href=3D"mailto:sbml-discuss@googlegroups.com">sbml-discuss@googlegroups.co=
m</a>&gt;, LibSBML Development List &lt;<a =
href=3D"mailto:libsbml-development@googlegroups.com">libsbml-development@g=
ooglegroups.com</a>&gt;<br></span></div><br><div>----------------------<br=
>libSBML-5.10.0<br>----------------------<br><br>We are pleased to =
announce the release of libSBML-5.10.0 which is<br>available for =
download from<br><br><a =
href=3D"https://sourceforge.net/projects/sbml/files/libsbml/5.10.0/">https=
://sourceforge.net/projects/sbml/files/libsbml/5.10.0/</a><br><br>=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D<br>5.10.0 =
(2014-04-10)<br>=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D<br><=
br>STABLE RELEASE<br><br>* New features<br><br> &nbsp;&nbsp;- New =
ASTNode infrastructure<br><br> &nbsp;&nbsp;&nbsp;&nbsp;The code =
underlying the ASTNode class has been refactored to<br> =
&nbsp;&nbsp;&nbsp;&nbsp;facilitate the extension of MathML by SBML L3 =
packages. &nbsp;The<br> &nbsp;&nbsp;&nbsp;&nbsp;API and behaviour has =
not changed except in places where<br> &nbsp;&nbsp;&nbsp;&nbsp;invalid =
MathML was being incorrectly parsed or created. It is<br> =
&nbsp;&nbsp;&nbsp;&nbsp;no longer possible to add a child to an ASTNode =
that represents<br> &nbsp;&nbsp;&nbsp;&nbsp;a number, for =
example.<br><br> &nbsp;&nbsp;&nbsp;&nbsp;Extensive testing has been done =
to ensure that the API and<br> &nbsp;&nbsp;&nbsp;&nbsp;correct behaviour =
of the ASTNode class remains unchanged and<br> =
&nbsp;&nbsp;&nbsp;&nbsp;unless you have derived your own classes from =
the ASTNode class<br> &nbsp;&nbsp;&nbsp;&nbsp;this change should not =
affect your implementation in any way.<br><br> =
&nbsp;&nbsp;&nbsp;&nbsp;** Please inform us if this turns out to be =
incorrect. We have<br> &nbsp;&nbsp;&nbsp;&nbsp;tried to anticipate and =
test use cases but we are aware that<br> &nbsp;&nbsp;&nbsp;&nbsp;it is =
possible that we have missed some.<br><br> &nbsp;&nbsp;&nbsp;&nbsp;In =
order to allow people to continue to use the original AST code<br> =
&nbsp;&nbsp;&nbsp;&nbsp;if they choose, the source code archives provide =
this code within<br> &nbsp;&nbsp;&nbsp;&nbsp;a 'math-legacy' directory =
and the libSBML configuration system<br> =
&nbsp;&nbsp;&nbsp;&nbsp;provides an option to build libSBML using this =
legacy code.<br><br> &nbsp;&nbsp;- General maintenance: we have done a =
number of sweeps of code to<br> &nbsp;&nbsp;&nbsp;&nbsp;identify and add =
such things as missing virtual functions. &nbsp;We<br> =
&nbsp;&nbsp;&nbsp;&nbsp;have also investigated memory leaks reported by =
users and have<br> &nbsp;&nbsp;&nbsp;&nbsp;done some extensive memory =
leak checking on the more intensive<br> =
&nbsp;&nbsp;&nbsp;&nbsp;functionality such as validation/comp flattening =
etc. &nbsp;However,<br> &nbsp;&nbsp;&nbsp;&nbsp;this remains an ongoing =
task.<br><br> &nbsp;&nbsp;- There is a new converter, the =
SBMLReactionConverter, which<br> &nbsp;&nbsp;&nbsp;&nbsp;will replace =
any Reactions within a Model with the equivalent<br> =
&nbsp;&nbsp;&nbsp;&nbsp;RateRules. &nbsp;An example of the use of this =
converter can be<br> &nbsp;&nbsp;&nbsp;&nbsp;found at =
examples/c++/convertReactions.cpp.<br><br> &nbsp;&nbsp;- There are new =
functions available on the Model class:<br> =
&nbsp;&nbsp;&nbsp;&nbsp;InitialAssignment* =
getInitialAssignmentBySymbol(const std::string&amp; symbol);<br> =
&nbsp;&nbsp;&nbsp;&nbsp;Rule* getRuleByVariable(const std::string&amp; =
variable);<br> &nbsp;&nbsp;&nbsp;&nbsp;AssignmentRule* =
getAssignmentRuleByVariable(const std::string&amp; variable);<br> =
&nbsp;&nbsp;&nbsp;&nbsp;RateRule* getRateRuleByVariable(const =
std::string&amp; variable);<br> &nbsp;&nbsp;&nbsp;&nbsp;These functions =
return the designated object using the 'symbol' or<br> =
&nbsp;&nbsp;&nbsp;&nbsp;'variable' attribute. &nbsp;This is duplicate =
functionality as the<br> &nbsp;&nbsp;&nbsp;&nbsp;objects can be =
retrieved using getRule and getInitialAssignment.<br> =
&nbsp;&nbsp;&nbsp;&nbsp;However the other similar functions on the Model =
class retrieve<br> &nbsp;&nbsp;&nbsp;&nbsp;objects by the 'id' =
attribute. If future versions of SBML<br> =
&nbsp;&nbsp;&nbsp;&nbsp;introduce the 'id' attribute on Rules and =
InitialAssignments we<br> &nbsp;&nbsp;&nbsp;&nbsp;will need functions =
that act differently.<br><br><br> &nbsp;&nbsp;- 'comp' package-specific =
updates:<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- The code that facilitates =
resolving files in relation to<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExternalModelDefinitions has been =
reviewed and made as robust<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;as =
possible.<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- The ability to customize the =
way SIds and SIdRefs are<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;renamed =
during the flattening process has been added. A<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;class of type PrefixTransformer can =
be created and assigned.<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This =
allows the user to add additional changes to the renaming<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;process. An example that illustrates =
the use of this facility<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to also =
rename the 'name' attribute of objects originating in<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;subModels has been included in the =
examples/c++/comp directory.<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- Unit =
tests have been added for the C API, and this exposed some<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;missing functions. The missing =
functions have now been added.<br><span class=3D"Apple-tab-span" =
style=3D"white-space:pre">	</span><br><br>* Bug fixes<br><br> =
&nbsp;&nbsp;- There were issues with propagating the =
package-enabling<br> &nbsp;&nbsp;&nbsp;&nbsp;functionality through the =
children of an element. &nbsp;These issues<br> =
&nbsp;&nbsp;&nbsp;&nbsp;have been resolved.<br><span =
class=3D"Apple-tab-span" style=3D"white-space:pre">	</span><br> =
&nbsp;&nbsp;- The converters that apply structural changes to the SBML =
document<br> &nbsp;&nbsp;&nbsp;&nbsp;used a setDocument function that =
expected a const SBMLDocument<br> &nbsp;&nbsp;&nbsp;&nbsp;object. Since =
the converters change the document, and in fact<br> =
&nbsp;&nbsp;&nbsp;&nbsp;immediately re-cast the document object, this =
function was both<br> &nbsp;&nbsp;&nbsp;&nbsp;confusing and inaccurate. =
&nbsp;There is now a setDocument function<br> =
&nbsp;&nbsp;&nbsp;&nbsp;that does not expect a const SBMLDocument =
object.<br><br> &nbsp;&nbsp;- There were some inconsistencies in the =
behaviour of LocalParameter<br> &nbsp;&nbsp;&nbsp;&nbsp;objects from =
SBML Level 3 in relation to the 'constant'<br> =
&nbsp;&nbsp;&nbsp;&nbsp;attribute. These have been fixed.<br><br><br> =
&nbsp;&nbsp;- 'layout' package-specific bug fixes:<br><br> =
&nbsp;&nbsp;&nbsp;&nbsp;- There were some discrepancies between the =
naming of arguments<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;to some =
constructors and the actual values being set using<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;these arguments. These have been =
corrected without changing<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;the =
resulting behaviour.<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- Sometimes when an =
SBML Level 2 document with 'layout' and<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'render' annotations was upgraded to =
SBML Level 3, the 'render'<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;namespace went missed from the =
annotation in the Level 3<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document. &nbsp;This has been =
fixed.<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- The 'render' package =
"objectRole" attribute was not being<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;correctly handled by the 'layout' =
code when the 'render' package<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;was disabled. &nbsp;This has been =
corrected.<br><br><br> &nbsp;&nbsp;- 'qual' package-specific bug =
fixes:<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- Certain validation errors were =
not being correctly reported,<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;with either missing information or =
bad line numbers. &nbsp;This<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;problem has been fixed. &nbsp;Thanks =
to Nicolas Rodriguez for<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reporting the problem.<br><br><br>* =
Configuration/build system changes<br><br> &nbsp;&nbsp;- WARNING: There =
is a bug in the Microsoft Visual Studio 2013<br> =
&nbsp;&nbsp;&nbsp;&nbsp;compiler that can cause strange output when =
doing repetitive file<br> &nbsp;&nbsp;&nbsp;&nbsp;reading and writing. =
&nbsp;We became aware of this when running our<br> =
&nbsp;&nbsp;&nbsp;&nbsp;unit tests on the comp flattening routines.<br> =
&nbsp;&nbsp;&nbsp;&nbsp;http://connect.microsoft.com/VisualStudio/feedback=
/details/<br> =
&nbsp;&nbsp;&nbsp;&nbsp;808199/visual-c-2013-floating-point-broken-on-firs=
t-use We<br> &nbsp;&nbsp;&nbsp;&nbsp;included a fix in our test files =
(libsbml/src/sbml/packages<br> =
&nbsp;&nbsp;&nbsp;&nbsp;/comp/util/test/TestRunner.c) but users should =
be aware that this<br> &nbsp;&nbsp;&nbsp;&nbsp;is an issue that may =
arise with this particular version of the<br> =
&nbsp;&nbsp;&nbsp;&nbsp;MSVC compiler.<br><br> &nbsp;&nbsp;- The CMake =
files have been updated to allow for the use when<br> =
&nbsp;&nbsp;&nbsp;&nbsp;libSBML is merely being referenced within a =
CMake build, rather<br> &nbsp;&nbsp;&nbsp;&nbsp;being specifically =
built.<br><br> &nbsp;&nbsp;- Both the GNU make and CMake configuration =
systems generate certain<br> &nbsp;&nbsp;&nbsp;&nbsp;header files that =
are specific to the libSBML build being<br> =
&nbsp;&nbsp;&nbsp;&nbsp;requested. &nbsp;Previously, libSBML source code =
included project<br> &nbsp;&nbsp;&nbsp;&nbsp;definition files for MSVC. =
&nbsp;These files were checked into SVN and<br> =
&nbsp;&nbsp;&nbsp;&nbsp;included within the released src archive =
distribution. &nbsp;Their<br> &nbsp;&nbsp;&nbsp;&nbsp;inclusion could =
potentially cause problems for people who wanted<br> =
&nbsp;&nbsp;&nbsp;&nbsp;to create different build configurations from =
the same source<br> &nbsp;&nbsp;&nbsp;&nbsp;code. &nbsp;Given that with =
CMake it is possible to generate MSVC<br> =
&nbsp;&nbsp;&nbsp;&nbsp;project files directly, we no longer include =
them in the source<br> &nbsp;&nbsp;&nbsp;&nbsp;archive distribution, and =
therefore, it is also not necessary to<br> =
&nbsp;&nbsp;&nbsp;&nbsp;include the header files generated by the =
configuration process.<br> &nbsp;&nbsp;&nbsp;&nbsp;Thus, these header =
files have been removed, and for CMake users<br> =
&nbsp;&nbsp;&nbsp;&nbsp;they will be generated within the build =
directory to facilitate<br> &nbsp;&nbsp;&nbsp;&nbsp;different builds =
using the same src tree.<br><br> &nbsp;&nbsp;- There were issues with =
classes exported across the Windows dll<br> =
&nbsp;&nbsp;&nbsp;&nbsp;interface. &nbsp;These have been fixed, and we =
have added additional<br> &nbsp;&nbsp;&nbsp;&nbsp;tests to catch these =
issues. &nbsp;Thanks to Andy Somogyi for reporting<br> =
&nbsp;&nbsp;&nbsp;&nbsp;the problem.<br><br><br>* Miscellaneous<br><br> =
&nbsp;&nbsp;- Python installers for various Linux distributions are =
now<br> &nbsp;&nbsp;&nbsp;&nbsp;available from the Open Build Service =
and via pypi. Links to the<br> &nbsp;&nbsp;&nbsp;&nbsp;relevant release =
can be found in the documentation on SourceForge<br> =
&nbsp;&nbsp;&nbsp;&nbsp;download pages for libSBML.<br><br> =
&nbsp;&nbsp;- The copyright statement for all example programs that we =
produced<br> &nbsp;&nbsp;&nbsp;&nbsp;ourselves has been changed to use a =
less restrictive license, so<br> &nbsp;&nbsp;&nbsp;&nbsp;that users can =
use the examples in their software without<br> =
&nbsp;&nbsp;&nbsp;&nbsp;limitation. &nbsp;The new license is the MIT =
license.<br><br> &nbsp;&nbsp;- The LICENSE.* files for libSBML now =
include a previously-missing<br> &nbsp;&nbsp;&nbsp;&nbsp;3rd party =
software acknowledgement for the Python argparse library<br> =
&nbsp;&nbsp;&nbsp;&nbsp;by Steven J. Bethard. &nbsp;(The argparse.py =
module is included with<br> &nbsp;&nbsp;&nbsp;&nbsp;libSBML =
distributions.)<br><br> &nbsp;&nbsp;- A number of extraneous files have =
been removed from the<br> &nbsp;&nbsp;&nbsp;&nbsp;documentation source =
directory (docs/src/); in addition, the<br> =
&nbsp;&nbsp;&nbsp;&nbsp;directory has undergone some minor =
restructuring.<br><br><br>EXPERIMENTAL RELEASE<br><br>* New =
features<br><br> &nbsp;&nbsp;- Support for the 'arrays' package =
according to the specification<br> &nbsp;&nbsp;&nbsp;&nbsp;dated =
September 11, 2013 (0.1 alpha) has been added to the<br> =
&nbsp;&nbsp;&nbsp;&nbsp;experimental release files. Note the extended =
MathML is accessible<br> &nbsp;&nbsp;&nbsp;&nbsp;via the ASTNode class; =
however, the current version version does<br> =
&nbsp;&nbsp;&nbsp;&nbsp;not yet include support for parsing to and from =
infix notation.<br><br><br> &nbsp;&nbsp;- 'multi' package-specific =
updates:<br><br> &nbsp;&nbsp;&nbsp;&nbsp;- The ability to extend =
ASTNodes and hence use extended MathML<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;has been added and thus it is now =
possible to use the attributes<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on the &lt;ci&gt; elements of math =
as specified by the 'multi'<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;package. The example relating to =
this has been updated accordingly.<br><br><br> &nbsp;* Bug fixes<br><br> =
&nbsp;&nbsp;- 'render' package-specific bug fixes:<br><br> =
&nbsp;&nbsp;&nbsp;&nbsp;- On occasion when an L2 document with layout =
and render<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;annotations was being =
upgraded to L3 the render namespace<br> =
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;was missed from the annotation in =
the L3 =
document.<br><br><br>=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
<br><br>Please report any problems you encounter using libSBML either to =
the<br>mailing list libsbml-team@caltech.edu or using the issue =
tracker<br>for libSBML =
at<br><br>https://sourceforge.net/tracker/?group_id=3D71971&amp;atid=3D942=
737<br><br>Thanks<br><br>the LibSBMLTeam<br><br><br>-- <br>You received =
this message because you are subscribed to the Google Groups =
"sbml-discuss" group.<br>To unsubscribe from this group and stop =
receiving emails from it, send an email to =
sbml-discuss+unsubscribe@googlegroups.com.<br>To post to this group, =
send email to sbml-discuss@googlegroups.com.<br>To view this discussion =
on the web visit =
https://groups.google.com/d/msgid/sbml-discuss/53465C0B.4080200%40caltech.=
edu.<br>For more options, visit =
https://groups.google.com/d/optout.<br></div></blockquote></div><br></body=
></html>=

--Apple-Mail=_14DCC19A-FFAD-4069-BCDA-B94BE5FB4157--

