From: Eric Robert Peskin <atacs-bugs@shang.elen.utah.edu>
To: myers@vlsigroup.elen.utah.edu
Subject: Re: CSC signals enabled in inapprorate state (PR#496)
Date: Thu Jun 14 20:37:01 2001

This is also system dependent (just like PR#544).  On RedHat 6, as of
cvs tag PR496reply2 the bug is still here.  See below.  However, on
RedHat 7, these examples work (even when using the same source code
and examples (cvs tag PR496reply2)).  Very strange.

I am moving this back to Incorrect Behavior, pending resolution.
==========================================================================

115 ming:~> cd ~peskin/nobackup/6/atacs/examples/csp/
116 ming:examples/csp> uname -a
Linux ming.elen.utah.edu 2.2.16-3 #1 Mon Jun 19 18:10:14 EDT 2000 i686 unknown
117 ming:examples/csp> cat /etc/redhat-release
Red Hat Linux release 6.0 (Hedwig)
118 ming:examples/csp> ../../src/atacs FIFO.csp -mEmXmcmsmUmPmTmFmOmpya
ATACS VERSION 4.1
Logging session in:  atacs.log
Exact cyclic table resolution mode now turned ON.
Exception handling now turned ON.
Now using combinational optimization.
Using PO sets timing to obtain state graphs.
Using subset region match during state space exploration.
Using superset region match during state space exploration.
Now using interleaving optimization.
Now using infinity optimization.
Now using orbits match.
Now using stack pruning on superset optimization.
Compiling FIFO.csp ... 
Compiled process FIFOctrl
Compiled process Lenv
Compiled process Renv
Storing module FIFO to ./FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done (0.000229)
Finding reduced state graph ... nodes = 270, dead = 2911
memory: max=628460 inuse=621844 free=6616 
done
37 iterations, 27 regions, 27 new_regions, 16 states in 0.00608897 seconds
nodes in use = 270, dead = 2911
memory: max=628460 inuse=621844 free=6616
Found 27 zones in 16 states for FIFO (4d 628460m 0.01u)
Projecting out dummy transitions ... done (0.000597)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 3 CSC violation(s)
Solution costing 1 + 0 used
Signal named CSC0 being added
IP: lo+/1 <-> lo-/1  ===== ro+/1 <-> ro-/1 

Storing TEL to file: FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Storing timed event-rule structure to:  FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Storing timed event-rule structure to:  FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Finding reduced state graph and storing to:  FIFO.rsg
ERROR: CSC0+/1 enabled but signal is not 0 or R in state 0110B
Storing constraint graph to:  deadlock.grf
Executing command:  parg deadlock.grf &
Storing error trace state graph to:  FIFO.grf
Executing command:  parg FIFO.grf &
Storing error trace in VHDL to:  trace.vhd
Initial: 3 + 0
Predicted: 1 + 0
Actual: 0 + 0
119 ming:examples/csp> layout 1.04 (C) Copyright 1990, 1992, 1994 Tomas Rokicki
Warning:  dropped 1 unconnected nodes

119 ming:examples/csp> ../../src/atacs seq.csp -mEmXmcmsmUmPmTmFmOmpya
ATACS VERSION 4.1
Logging session in:  atacs.log
Exact cyclic table resolution mode now turned ON.
Exception handling now turned ON.
Now using combinational optimization.
Using PO sets timing to obtain state graphs.
Using subset region match during state space exploration.
Using superset region match during state space exploration.
Now using interleaving optimization.
Now using infinity optimization.
Now using orbits match.
Now using stack pruning on superset optimization.
Compiling seq.csp ... 
Compiled process main
Compiled process a
Compiled process b
Compiled process c
Storing module seq to ./seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done (0.000260)
Finding reduced state graph ... nodes = 368, dead = 6157
memory: max=882412 inuse=877068 free=5344 
done
52 iterations, 32 regions, 28 new_regions, 20 states in 0.00843 seconds
nodes in use = 368, dead = 6157
memory: max=882412 inuse=877068 free=5344
Found 32 zones in 20 states for seq (6d 882412m 0.01u)
Projecting out dummy transitions ... done (0.000607)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 6 CSC violation(s)
Solution costing 3 + 0 used
Signal named CSC0 being added
IP: bo+/1 <-> bo-/1  ===== ao+/1 <-> ao-/1 
Storing TEL to file: seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Finding reduced state graph and storing to:  seq.rsg
ERROR: CSC0-/1 enabled but signal is not 1 or F in state 0F0010B
Storing constraint graph to:  deadlock.grf
Executing command:  parg deadlock.grf &
Storing error trace state graph to:  seq.grf
Executing command:  parg seq.grf &
Storing error trace in VHDL to:  trace.vhd
Initial: 6 + 0
Predicted: 3 + 0
Actual: 0 + 0
120 ming:examples/csp> layout 1.04 (C) Copyright 1990, 1992, 1994 Tomas Rokicki
layout 1.04 (C) Copyright 1990, 1992, 1994 Tomas Rokicki

