From atacs-bugs@chou.ece.utah.edu  Tue Mar 28 19:29:25 2006
Return-Path: <atacs-bugs@chou.ece.utah.edu>
Received: from chou.ece.utah.edu (localhost.localdomain [127.0.0.1])
	by chou.ece.utah.edu (8.13.6/8.13.1) with ESMTP id k2T2TPUe008448
	for <atacs-bugs@shang.ece.utah.edu>; Tue, 28 Mar 2006 19:29:25 -0700
Received: (from atacs-bugs@localhost)
	by chou.ece.utah.edu (8.13.6/8.13.6/Submit) id k2T2TPEL008447
	for atacs-bugs@shang.ece.utah.edu; Tue, 28 Mar 2006 19:29:25 -0700
Received: from jiaqi.ece.utah.edu (jiaqi.ece.utah.edu [155.98.27.199])
	by chou.ece.utah.edu (8.13.6/8.13.1) with ESMTP id k2T2TNUJ008431;
	Tue, 28 Mar 2006 19:29:23 -0700
Received: from jiaqi.ece.utah.edu (localhost.localdomain [127.0.0.1])
	by jiaqi.ece.utah.edu (8.13.4/8.12.8) with ESMTP id k2T2SJpb012339;
	Tue, 28 Mar 2006 19:28:20 -0700
Received: from localhost (myers@localhost)
	by jiaqi.ece.utah.edu (8.13.4/8.13.4/Submit) with ESMTP id k2T2SJRe012336;
	Tue, 28 Mar 2006 19:28:19 -0700
X-Authentication-Warning: jiaqi.ece.utah.edu: myers owned process doing -bs
Date: Tue, 28 Mar 2006 19:28:19 -0700 (MST)
From: Chris Myers <myers@vlsigroup.ece.utah.edu>
X-X-Sender: myers@jiaqi.ece.utah.edu
To: atacs-bugs@vlsigroup.ece.utah.edu
cc: seegmill@vlsigroup.ece.utah.edu
Subject: error in hsl parser
Message-ID: <Pine.LNX.4.64.0603281926430.12319@jiaqi.ece.utah.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on chou.ece.utah.edu
X-Spam-Level: 
X-Spam-Status: No, score=-2.7 required=5.0 tests=ALL_TRUSTED,AWL 
	autolearn=unavailable version=3.0.4


I get this error:

WARNING: Improper symbol

ERROR:74:  /1 is an undeclared event!
ERROR:74:  Expected a )!
ERROR:74:  Expected a |, &, ), or a ]!

when I run this command:

atacs -cPlv talktemp.vhd

on this file:

library IEEE;
use IEEE.std_logic_1164.all;
use work.handshake.all;
use work.nondeterminism.all;

entity temperature is
end temperature;

architecture monitor of temperature is

   quantity t: real;  -- Temperature
   quantity c1: real; -- Rod1 Timer
   quantity c2: real; -- Rod2 Timer
   signal rod1 : std_logic := '0';
   signal rod2 : std_logic := '0';
   signal shutdown : std_logic := '0';
   begin

     break t=> 0.0, c1=> 80.0, c2=> 80.0; -- Initial conditions

     break c1 => 0.0 when rod1 = '1' and not t'above(250.0);
     break c2 => 0.0 when rod2 = '1' and not t'above(250.0);

     c1'dot == 1.0;
     c2'dot == 1.0;

     if shutdown = '1' use
       t'dot == 0.0;
     else
       if rod1 = '1' use
         t'dot == -25.0;
       elsif rod2 = '1' use
         t'dot == -10.0;
       else
         t'dot == 32.0;
       end use;
     end use;

     rods : process
     begin
       wait until t'above(1100.0);
       if c1'above(80.0) then
         assign(rod1,'1',0,0);
         wait until not t'above(250.0) and not c1'above(80.0);
         assign(rod1,'0',0,0);
       elsif c2'above(80.0) then
         assign(rod2,'1',0,0);
         wait until not t'above(250.0) and not c2'above(80.0);
         assign(rod2,'0',0,0);
       else
         assign(rod2,'1',0,0);
         assign(rod1,'1',0,0);
       end if;

     end process rods;

end monitor;

Any ideas?

Chris

