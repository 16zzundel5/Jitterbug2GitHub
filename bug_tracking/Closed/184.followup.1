From peskin@xia.elen.utah.edu  Tue Jul 20 13:00:14 1999
Received: from xia.elen.utah.edu (xia.elen.utah.edu [128.110.18.236]) by yuan.elen.utah.edu with ESMTP (8.7.1/8.7.1) id NAA12125 for <atacs-bugs@shang.elen.utah.edu>; Tue, 20 Jul 1999 13:00:14 -0600 (MDT)
Received: (from peskin@localhost)
	by xia.elen.utah.edu (8.8.7/8.8.7) id NAA29215
	for atacs-bugs@shang.elen.utah.edu; Tue, 20 Jul 1999 13:00:33 -0600
Date: Tue, 20 Jul 1999 13:00:33 -0600
From: Eric Peskin <peskin@xia.elen.utah.edu>
Message-Id: <199907201900.NAA29215@xia.elen.utah.edu>
To: atacs-bugs@shang.elen.utah.edu
Subject: Re: Add switch to determine of TELs table is cleared on compile. (PR#184)

>1) Comment out the include statements in a csp/hse file.  Then, load the files
>   from the include line, followed by the top level file.  It should compile 
>   fine and find all the needed modules.

It compiles, but gets different results from those of the version with
the includes:


188 shang:~/atacs/examples> pwd
/home/xia/peskin/atacs/examples
189 shang:~/atacs/examples> ls -l `which atacs`
-rwxr-xr-x   1 peskin   console  12385566 Jul 20 08:28 /home/xia/peskin/atacs/src/atacs*
190 shang:~/atacs/examples> make clean
rm -f `cat .cvsignore`
191 shang:~/atacs/examples> cvs diff lapb2.csp
Index: lapb2.csp
===================================================================
RCS file: /home/ming/cvsroot/atacs/examples/lapb2.csp,v
retrieving revision 1.1
diff -r1.1 lapb2.csp
2c2
< include lapbsv;
---
> /*include lapbsv;*/
192 shang:~/atacs/examples> atacs -msmUmPmTmc -lc lapbsv -ya lapb2
ATACS VERSION 4.1
Logging session in:  atacs.log
Using PO sets timing to obtain state graphs.
Using subset region match during state space exploration.
Using superset region match during state space exploration.
Now using interleaving optimization.
Now using combinational optimization.
Compiling lapbsv.csp ... 
Storing process lapbctrl to lapbctrl.er
error: Component 'lapb2' not found.
ERROR:  Cannot access lapb2.er!
Compiling lapb2.csp ... 
Storing process leftenv to leftenv.er
Storing process rightenv to rightenv.er
Storing process lapb2 to lapb2.er
Loading timed event-rule structure from:  lapb2.er
Initializing 3 cycles ... done
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done
Finding reduced state graph ... 75 iterations 50 regions, 55 new_reg, 36 states (stack_depth = 16)
nodes = 247, dead = 688
memory: max=432156 inuse=425572 free=6584 
153 iterations 100 regions, 110 new_reg, 73 states (stack_depth = 27)
nodes = 247, dead = 688
memory: max=505884 inuse=501444 free=4440 
251 iterations 150 regions, 166 new_reg, 82 states (stack_depth = 25)
nodes = 247, dead = 688
memory: max=546844 inuse=542532 free=4312 
nodes = 247, dead = 688
memory: max=546844 inuse=525548 free=21296 
done
369 iterations, 188 regions, 204 new_regions, 82 states in 0.155237 seconds
nodes in use = 247, dead = 688
memory: max=546844 inuse=525548 free=21296
Projecting out dummy transitions ... done
Checking CSC ... complete state coded
Finding regions ... done
Finding conflicts ... done
Finding cover ... done
Storing production rules to:  lapb2.prs
Total Area = 8 literals 22 transistors
193 shang:~/atacs/examples> diff lapb2.prs.gold lapb2.prs
0a1,2
> [+o2: (~x_lapb2 & ~i3)]
> [-o2: (i2 & x_lapb2)]
4,11d5
< [+o1: (~i1 & ~x_lapb1 & ~i2)]
< [-o1: (i1)]
< [+o2: (~x_lapb2 & ~i3)]
< [-o2: (x_lapb2 & i2)]
< [+x_lapb1: (o1)]
< [-x_lapb1: (i2)]
< [+i2: (~o1 & o2 & x_lapb1)]
< [-i2: (~o2 & ~x_lapb1)]
