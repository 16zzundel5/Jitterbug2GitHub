From peskin@cs.utah.edu  Thu May 31 16:02:27 2001
Return-Path: <peskin@cs.utah.edu>
Received: from localhost (shang.elen.utah.edu [155.99.23.201])
	by chou.elen.utah.edu (8.9.3/8.9.3) with ESMTP id QAA30383
	for <atacs-bugs@shang.elen.utah.edu>; Thu, 31 May 2001 16:02:27 -0600
Date: Thu, 31 May 2001 16:02:27 -0600
From: peskin@cs.utah.edu
Message-Id: <200105312202.QAA30383@chou.elen.utah.edu>
To: atacs-bugs@shang.elen.utah.edu
Subject: adding a rule causes a CSC violation?

Full_Name: Eric Robert Peskin
Version: cvs tag badRule
OS: RedHat 7.0 Linux xia.elen.utah.edu 2.2.19-7.0.1 #1 Tue Apr 10 01:56:16 EDT 2001 i686 unknown
spec: /home/xia/peskin/atacs/examples/tel/{good,bad}.tel
log: /home/xia/peskin/atacs/examples/tel/atacs.log
Submission from: xia.elen.utah.edu (155.99.23.200)
Submitted by: peskin


The only difference between good.tel and bad.tel is that bad.tel has one 
additional rule.  (bad.tel has a proper superset of the rules of good.tel).
And yet, good.tel synthesizes while bad.tel hits a CSC 
violation.  Does that make sense?


149 xia:~> cd ~peskin/atacs/examples/tel
150 xia:examples/tel> diff good.tel bad.tel
4c4
< .r 47 # causal rules
---
> .r 48 # causal rules
71a72
> $HSE6 $HSE3  0 0 inf
151 xia:examples/tel> ../../src/atacs -ltya good
ATACS VERSION 4.1
Logging session in:  atacs.log
Loading timed event/level structure from:  good.tel
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking safety ... safe
Finding reduced state graph ... done (states=979,time=0.241658)
Projecting out dummy transitions ... done (0.020179)
Checking CSC ... complete state coded
Finding regions ... done (0.000544)
Finding conflicts ... done (0.000638)
Finding covers ... done (0.000238)
Storing production rules to:  good.prs
Total Area = 6 literals 16 transistors
152 xia:examples/tel> 
152 xia:examples/tel> ../../src/atacs -ltya bad
ATACS VERSION 4.1
Logging session in:  atacs.log
Loading timed event/level structure from:  bad.tel
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking safety ... safe
Finding reduced state graph ... done (states=727,time=0.160201)
Projecting out dummy transitions ... done (0.013055)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
153 xia:examples/tel> 

