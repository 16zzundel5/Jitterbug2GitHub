From peskin@vlsigroup.elen.utah.edu  Mon Jul  9 14:04:01 2001
Return-Path: <peskin@vlsigroup.elen.utah.edu>
Received: from vlsigroup.elen.utah.edu (IDENT:peskin@xia.elen.utah.edu [155.99.23.200])
	by chou.elen.utah.edu (8.9.3/8.9.3) with ESMTP id OAA12588
	for <atacs-bugs@shang.elen.utah.edu>; Mon, 9 Jul 2001 14:04:01 -0600
Sender: peskin@chou.elen.utah.edu
Message-ID: <3B4A0E31.256CD8AD@vlsigroup.elen.utah.edu>
Date: Mon, 09 Jul 2001 14:04:01 -0600
From: Eric Robert Peskin <peskin@vlsigroup.elen.utah.edu>
Organization: University of Utah
X-Mailer: Mozilla 4.77 [en] (X11; U; Linux 2.2.19-7.0.8 i686)
X-Accept-Language: en, zh-TW, zh
MIME-Version: 1.0
To: Chris Myers <atacs-bugs@shang.elen.utah.edu>
Subject: Re: CSC signals enabled in inapprorate state (PR#496)
References: <200107091826.MAA11745@chou.elen.utah.edu>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Agreed:  This seems to work on both RH6 & RH7 as of cvs tag
PR496fixed.
See the sessions below.
Thanks!
I have added 
	atacs/examples/csp/{FIFO.prs.gold,seq.prs.night}
cvs tag PR496fixed.  I will now close this report.

---8<------8<------8<------8<------8<------8<------8<------8<------8<---
101 ming:~> cd ~peskin/nobackup/6/atacs/examples/csp/
102 ming:examples/csp> uname -a
Linux ming.elen.utah.edu 2.2.16-3 #1 Mon Jun 19 18:10:14 EDT 2000 i686
unknown
103 ming:examples/csp> cat /etc/redhat-release
Red Hat Linux release 6.0 (Hedwig)
104 ming:examples/csp> ../../src/atacs FIFO.csp -tsys
ATACS VERSION 4.1
Logging session in:  atacs.log
Using PO sets timing to obtain state graphs.
Using single-cube algortithm for synthesis.
Compiling FIFO.csp ... 
Compiled process FIFOctrl
Compiled process Lenv
Compiled process Renv
lo+/1, lo-/1, 0 [0, 2147483647]
ro+/1, ro-/1, 0 [0, 2147483647]
li+/1, li-/1, 0 [0, 2147483647]
li-/1, li+/1, 1 [0, 2147483647]
ri+/1, ri-/1, 0 [0, 2147483647]
ri-/1, ri+/1, 1 [0, 2147483647]
Storing module 0 to 0.er
Post processing ...Storing module preproc to preproc.er
Storing module FIFO to ./FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done (0.000212)
Finding reduced state graph ... nodes = 220, dead = 2784
memory: max=614284 inuse=611204 free=3080 
done
37 iterations, 27 regions, 27 new_regions, 16 states in 0.00571001
seconds
nodes in use = 220, dead = 2784
memory: max=614284 inuse=611204 free=3080
Found 27 zones in 16 states for FIFO (4d 614284m 0u)
Projecting out dummy transitions ... done (0.000604)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 3 CSC violation(s)
Solution costing 0 + 0 used
Signal named CSC0 being added
IP: lo+/1 <-> lo-/1  ===== ro+/1 <-> ro-/1 

Storing TEL to file: FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Storing timed event-rule structure to:  FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Storing timed event-rule structure to:  FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Using single-cube algortithm for synthesis.
Finding reduced state graph and storing to:  FIFO.rsg
nodes = 257, dead = 4146
memory: max=753548 inuse=744716 free=8832 
done
67 iterations, 45 regions, 45 new_regions, 24 states in 0.01187
seconds
nodes in use = 257, dead = 4146
memory: max=753548 inuse=744716 free=8832
Found 45 zones in 24 states for FIFO (8d 753548m 0.01u)
Initial: 3 + 0
Predicted: 0 + 0
Actual: 0 + 0
Using single-cube algortithm for synthesis.
Projecting out dummy transitions ... done (0.000602)
Checking CSC ... complete state coded
Finding regions ... done (0.000418)
Finding conflicts ... done (0.000352)
Finding covers ... done (0.000208)
Storing production rules to:  FIFO.prs
Total Area = 12 literals 23 transistors
105 ming:examples/csp> ../../src/atacs seq.csp -tsys
ATACS VERSION 4.1
Logging session in:  atacs.log
Using PO sets timing to obtain state graphs.
Using single-cube algortithm for synthesis.
Compiling seq.csp ... 
Compiled process main
Compiled process a
Compiled process b
Compiled process c
ao+/1, ao-/1, 0 [0, 2147483647]
bo+/1, bo-/1, 0 [0, 2147483647]
ai-/1, ai+/1, 1 [0, 2147483647]
bo-/1, co+/1, 0 [0, 2147483647]
co+/1, co-/1, 0 [0, 2147483647]
ai+/1, ai-/1, 0 [0, 2147483647]
co-/1, ao+/1, 1 [0, 2147483647]
bi+/1, bi-/1, 0 [0, 2147483647]
ci+/1, ci-/1, 0 [0, 2147483647]
Storing module 0 to 0.er
Post processing ...Storing module preproc to preproc.er
Storing module seq to ./seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done (0.000233)
Finding reduced state graph ... nodes = 341, dead = 5896
memory: max=868236 inuse=863132 free=5104 
done
37 iterations, 29 regions, 29 new_regions, 20 states in 0.0064199
seconds
nodes in use = 341, dead = 5896
memory: max=868236 inuse=863132 free=5104
Found 29 zones in 20 states for seq (2d 868236m 0u)
Projecting out dummy transitions ... done (0.000620)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 6 CSC violation(s)
Solution costing 2 + 0 used
Signal named CSC0 being added
IP: bo+/1 <-> bo-/1  ===== ao+/1 <-> ao-/1 

Storing TEL to file: seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Using single-cube algortithm for synthesis.
Finding reduced state graph and storing to:  seq.rsg
nodes = 372, dead = 7762
memory: max=1023884 inuse=1019796 free=4088 
done
56 iterations, 41 regions, 41 new_regions, 26 states in 0.010808
seconds
nodes in use = 372, dead = 7762
memory: max=1023884 inuse=1019796 free=4088
Found 41 zones in 26 states for seq (3d 1023884m 0.01u)
Initial: 6 + 0
Predicted: 2 + 0
Actual: 2 + 0
Using single-cube algortithm for synthesis.
Projecting out dummy transitions ... done (0.000617)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 2 CSC violation(s)
Solution costing 0 + 0 used
Signal named CSC1 being added
IP: CSC0-/1 <-> bo+/1  ===== co+/1 <-> co-/1 

Storing TEL to file: seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Using single-cube algortithm for synthesis.
Finding reduced state graph and storing to:  seq.rsg
nodes = 421, dead = 10055
memory: max=1183628 inuse=1181332 free=2296 
done
85 iterations, 59 regions, 59 new_regions, 34 states in 0.018883
seconds
nodes in use = 421, dead = 10055
memory: max=1183628 inuse=1181332 free=2296
Found 59 zones in 34 states for seq (6d 1183628m 0.02u)
Initial: 2 + 0
Predicted: 0 + 0
Actual: 0 + 0
Using single-cube algortithm for synthesis.
Projecting out dummy transitions ... done (0.000647)
Checking CSC ... complete state coded
Finding regions ... done (0.000851)
Finding conflicts ... done (0.000664)
Finding covers ... done (0.000366)
Storing production rules to:  seq.prs
EXCEPTION: Storing guards with fanin > 4 to:  seq.err
Total Area = 22 literals 41 transistors
Storing production rules to:  seq.prs
EXCEPTION: Storing guards with fanin > 4 to:  seq.err
Total Area = 22 literals 41 transistors
Storing production rules to:  seq.prs
EXCEPTION: Storing guards with fanin > 4 to:  seq.err
Total Area = 22 literals 41 transistors
106 ming:examples/csp> 
---8<------8<------8<------8<------8<------8<------8<------8<------8<---
104 xia:~> cd ~peskin/atacs/examples/csp/
105 xia:examples/csp> uname -a
Linux xia.elen.utah.edu 2.2.19-7.0.8 #1 Thu Jun 21 06:28:56 EDT 2001
i686 unknown
106 xia:examples/csp> cat /etc/redhat-release
Red Hat Linux release 7.0 (Guinness)
107 xia:examples/csp> ../../src/atacs FIFO.csp -tsys
ATACS VERSION 4.1
Logging session in:  atacs.log
Using PO sets timing to obtain state graphs.
Using single-cube algortithm for synthesis.
Compiling FIFO.csp ... 
Compiled process FIFOctrl
Compiled process Lenv
Compiled process Renv
lo+/1, lo-/1, 0 [0, 2147483647]
ro+/1, ro-/1, 0 [0, 2147483647]
li+/1, li-/1, 0 [0, 2147483647]
li-/1, li+/1, 1 [0, 2147483647]
ri+/1, ri-/1, 0 [0, 2147483647]
ri-/1, ri+/1, 1 [0, 2147483647]
Storing module 0 to 0.er
Post processing ...Storing module preproc to preproc.er
Storing module FIFO to ./FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done (0.000033)
Finding reduced state graph ... nodes = 220, dead = 2784
memory: max=617944 inuse=611736 free=6208 
done
37 iterations, 27 regions, 27 new_regions, 16 states in 0.00212395
seconds
nodes in use = 220, dead = 2784
memory: max=617944 inuse=611736 free=6208
Found 27 zones in 16 states for FIFO (4d 617944m 0u)
Projecting out dummy transitions ... done (0.000153)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 3 CSC violation(s)
Solution costing 0 + 0 used
Signal named CSC0 being added
IP: lo+/1 <-> lo-/1  ===== ro+/1 <-> ro-/1 

Storing TEL to file: FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Storing timed event-rule structure to:  FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Storing timed event-rule structure to:  FIFO.er
Loading timed event-rule structure from:  FIFO.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  FIFO.rr
Using single-cube algortithm for synthesis.
Finding reduced state graph and storing to:  FIFO.rsg
nodes = 257, dead = 4146
memory: max=753112 inuse=745296 free=7816 
done
67 iterations, 45 regions, 45 new_regions, 24 states in 0.00551593
seconds
nodes in use = 257, dead = 4146
memory: max=753112 inuse=745296 free=7816
Found 45 zones in 24 states for FIFO (8d 753112m 0.01u)
Initial: 3 + 0
Predicted: 0 + 0
Actual: 0 + 0
Using single-cube algortithm for synthesis.
Projecting out dummy transitions ... done (0.000131)
Checking CSC ... complete state coded
Finding regions ... done (0.000120)
Finding conflicts ... done (0.000088)
Finding covers ... done (0.000034)
Storing production rules to:  FIFO.prs
Total Area = 12 literals 23 transistors
108 xia:examples/csp> 
108 xia:examples/csp> ../../src/atacs seq.csp -tsys
ATACS VERSION 4.1
Logging session in:  atacs.log
Using PO sets timing to obtain state graphs.
Using single-cube algortithm for synthesis.
Compiling seq.csp ... 
Compiled process main
Compiled process a
Compiled process b
Compiled process c
ao+/1, ao-/1, 0 [0, 2147483647]
bo+/1, bo-/1, 0 [0, 2147483647]
ai-/1, ai+/1, 1 [0, 2147483647]
bo-/1, co+/1, 0 [0, 2147483647]
co+/1, co-/1, 0 [0, 2147483647]
ai+/1, ai-/1, 0 [0, 2147483647]
co-/1, ao+/1, 1 [0, 2147483647]
bi+/1, bi-/1, 0 [0, 2147483647]
ci+/1, ci-/1, 0 [0, 2147483647]
Storing module 0 to 0.er
Post processing ...Storing module preproc to preproc.er
Storing module seq to ./seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules ... done (0.000043)
Finding reduced state graph ... nodes = 341, dead = 5896
memory: max=867800 inuse=863528 free=4272 
done
37 iterations, 29 regions, 29 new_regions, 20 states in 0.00243306
seconds
nodes in use = 341, dead = 5896
memory: max=867800 inuse=863528 free=4272
Found 29 zones in 20 states for seq (2d 867800m 0u)
Projecting out dummy transitions ... done (0.000166)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 6 CSC violation(s)
Solution costing 2 + 0 used
Signal named CSC0 being added
IP: bo+/1 <-> bo-/1  ===== ao+/1 <-> ao-/1 

Storing TEL to file: seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Using single-cube algortithm for synthesis.
Finding reduced state graph and storing to:  seq.rsg
nodes = 372, dead = 7762
memory: max=1023448 inuse=1020352 free=3096 
done
56 iterations, 41 regions, 41 new_regions, 26 states in 0.00395393
seconds
nodes in use = 372, dead = 7762
memory: max=1023448 inuse=1020352 free=3096
Found 41 zones in 26 states for seq (3d 1023448m 0u)
Initial: 6 + 0
Predicted: 2 + 0
Actual: 2 + 0
Using single-cube algortithm for synthesis.
Projecting out dummy transitions ... done (0.000192)
Checking CSC ... NOT complete state coded
EXCEPTION:  CSC violation!
Finding State Variables to solve 2 CSC violation(s)
Solution costing 0 + 0 used
Signal named CSC1 being added
IP: CSC0-/1 <-> bo+/1  ===== co+/1 <-> co-/1 

Storing TEL to file: seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Storing timed event-rule structure to:  seq.er
Loading timed event-rule structure from:  seq.er
Initializing 3 cycles ... done
Using single-cube algortithm for synthesis.
Checking for cycles in acyclic constraint graph ... done.
Checking liveness ... live
Checking connectivity ... strongly connected
Checking safety ... safe
Finding redundant rules and storing to:  seq.rr
Using single-cube algortithm for synthesis.
Finding reduced state graph and storing to:  seq.rsg
nodes = 421, dead = 10055
memory: max=1187288 inuse=1181704 free=5584 
done
85 iterations, 59 regions, 59 new_regions, 34 states in 0.010461
seconds
nodes in use = 421, dead = 10055
memory: max=1187288 inuse=1181704 free=5584
Found 59 zones in 34 states for seq (6d 1187288m 0.01u)
Initial: 2 + 0
Predicted: 0 + 0
Actual: 0 + 0
Using single-cube algortithm for synthesis.
Projecting out dummy transitions ... done (0.000150)
Checking CSC ... complete state coded
Finding regions ... done (0.000224)
Finding conflicts ... done (0.000222)
Finding covers ... done (0.000071)
Storing production rules to:  seq.prs
EXCEPTION: Storing guards with fanin > 4 to:  seq.err
Total Area = 22 literals 41 transistors
Storing production rules to:  seq.prs
EXCEPTION: Storing guards with fanin > 4 to:  seq.err
Total Area = 22 literals 41 transistors
Storing production rules to:  seq.prs
EXCEPTION: Storing guards with fanin > 4 to:  seq.err
Total Area = 22 literals 41 transistors
109 xia:examples/csp>

