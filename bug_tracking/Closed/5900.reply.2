From: Chris Myers <atacs-bugs@vlsigroup.ece.utah.edu>
To: n.roehner@utah.edu
Subject: Re: BUG Duplicate DNA components (PR#5900)
Date: Wed Sep 10 21:19:13 2014

Nic,

I modified the code as shown below to avoid duplicate display ids.  Namely, if
the displayId exists, then it replaces 
that displayId.  I know this is not technically correct, but it avoids the bug
for now.  We will need to remove this 
code when new library is installed that does not care about duplicate
displayIds.

Chris

	// Replaces DNA component and its subcomponents with components from SBOL
document if their URIs 
match
	// Used to avoid conflict of multiple data structures of same URI in a single
SBOL document
	public static DnaComponent replaceDNAComponent(DnaComponent dnac, SBOLDocument
sbolDoc) {
		SBOLDocumentImpl flattenedDoc = (SBOLDocumentImpl)
flattenSBOLDocument(sbolDoc);
		UriResolver<DnaComponent> flattenedResolver =
flattenedDoc.getComponentUriResolver();
		DnaComponent resolvedDnac = flattenedResolver.resolve(dnac.getURI());
		if (resolvedDnac != null)
			return resolvedDnac;
		// TODO: Added to avoid duplicate display ids.
		DisplayIdResolver<DnaComponent> flattenedIdResolver = 
flattenedDoc.getComponentDisplayIdResolver();
		resolvedDnac = flattenedIdResolver.resolve(dnac.getDisplayId());
		if (resolvedDnac != null)
			return resolvedDnac;
		
		List<SequenceAnnotation> annos = dnac.getAnnotations();
		if (annos != null && annos.size() > 0)
			replaceSubComponents(annos, flattenedResolver);
		return dnac;
	}